(()=>{"use strict";var t={49:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OutputLayer=void 0,e.OutputLayer=class{weights;bias;gradWeights;gradBias;learningRate=.001;vocabSize;embeddingDim;constructor(t,e){this.embeddingDim=t,this.vocabSize=e;const a=Math.sqrt(1/(t+e));this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a)),this.bias=Array.from({length:e},()=>0),this.gradWeights=Array.from({length:t},()=>Array.from({length:e},()=>0)),this.gradBias=Array.from({length:e},()=>0)}forward(t){const e=new Array(this.vocabSize).fill(0);for(let a=0;a<this.vocabSize;a++){let i=this.bias[a];for(let e=0;e<this.embeddingDim;e++)i+=t[e]*this.weights[e][a];e[a]=i}return e}softmax(t){const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),i=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/i)}backward(t,e){const a=new Array(this.embeddingDim).fill(0);for(let i=0;i<this.embeddingDim;i++)for(let r=0;r<this.vocabSize;r++)this.gradWeights[i][r]+=e[r]*t[i],a[i]+=e[r]*this.weights[i][r];for(let t=0;t<this.vocabSize;t++)this.gradBias[t]+=e[t];return a}zeroGrad(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.vocabSize;e++)this.gradWeights[t][e]=0;for(let t=0;t<this.vocabSize;t++)this.gradBias[t]=0}updateParameters(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.vocabSize;e++){const a=Math.max(-5,Math.min(5,this.gradWeights[t][e]));this.weights[t][e]+=this.learningRate*a}for(let t=0;t<this.vocabSize;t++){const e=Math.max(-5,Math.min(5,this.gradBias[t]));this.bias[t]+=this.learningRate*e}}}},77:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EmbeddingLayer=void 0,e.EmbeddingLayer=class{weights;embeddingDim;learningRate=.001;constructor(t,e){this.embeddingDim=e;const a=Math.sqrt(1/e);this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}forward(t){return t<0||t>=this.weights.length?Array(this.embeddingDim).fill(0):[...this.weights[t]]}backward(t,e){if(!(t<0||t>=this.weights.length))for(let a=0;a<this.embeddingDim;a++){const i=Math.max(-5,Math.min(5,e[a]));this.weights[t][a]+=this.learningRate*i}}}},219:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleLLM=void 0;const i=a(405),r=a(363),s=a(77),n=a(49),o=a(383);e.SimpleLLM=class{tokenizer;embedding;transformers;outputLayer;positionalEncoding;vocabSize;embeddingDim;numLayers;constructor(t,e=16,a=2){this.vocabSize=t.length,this.embeddingDim=e,this.numLayers=a,this.tokenizer=new i.SimpleTokenizer(t),this.embedding=new s.EmbeddingLayer(t.length,e),this.transformers=Array.from({length:a},()=>new r.SimpleTransformer(e)),this.outputLayer=new n.OutputLayer(e,t.length),this.positionalEncoding=new o.PositionalEncodingCache(e)}getSpecialTokenIndices(){const t=new Set;return["[PAD]","[UNK]","[EOS]"].forEach(e=>{const a=this.tokenizer.vocabMap[e];void 0!==a&&t.add(a)}),t}predict(t,e=10){let a=this.tokenizer.encode(t);const i=this.getSpecialTokenIndices(),r=this.tokenizer.vocabMap["[EOS]"];console.log("Input text:",t),console.log("Encoded tokens:",a),console.log("Special token indices:",Array.from(i)),console.log("Vocab size:",this.vocabSize);for(let t=0;t<e;t++){const e=a.map(t=>this.embedding.forward(t));let s=this.positionalEncoding.addToEmbeddings(e);for(const t of this.transformers)s=t.forward(s);const n=s[s.length-1],o=this.outputLayer.forward(n),h=this.outputLayer.softmax(o),l=h.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);console.log(`Step ${t} - Top 5 probs (before filter):`,l);const d=h.map((t,e)=>i.has(e)?0:t),m=d.reduce((t,e)=>t+e,1e-10),g=d.map(t=>t/m),c=Math.max(...g),u=g.indexOf(c);console.log(`Step ${t}: nextToken=${u}, maxProb=${c.toFixed(4)}, word="${this.tokenizer.vocab[u]}"`);const p=g.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);if(console.log(`Step ${t} - Top 5 probs (after filter):`,p),a.push(u),u===r)break}const s=this.tokenizer.decode(a);return console.log("Final result:",s),s}train(t,e=10){for(let a=0;a<e;a++){let i=0;t.forEach(({input:t,target:e})=>{for(const t of this.transformers)t.zeroGrad(),t.layerNorm1.zeroGrad(),t.layerNorm2.zeroGrad();this.outputLayer.zeroGrad();const a=this.tokenizer.encode(t),r=this.tokenizer.encode(e),s=a.map(t=>this.embedding.forward(t));let n=this.positionalEncoding.addToEmbeddings(s);for(const t of this.transformers)n=t.forward(n);const o=n,h=Math.min(o.length,r.length),l=Array.from({length:o.length},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<h;t++){const e=this.outputLayer.forward(o[t]),a=this.outputLayer.softmax(e),s=a.map(t=>-t);s[r[t]]+=1,i-=Math.log(a[r[t]]+1e-10);const n=this.outputLayer.backward(o[t],s);for(let e=0;e<this.embeddingDim;e++)l[t][e]=n[e]}let d=l;for(let t=this.transformers.length-1;t>=0;t--)d=this.transformers[t].backward(d);const m=d;for(let t=0;t<a.length&&t<m.length;t++)this.embedding.backward(a[t],m[t]);this.outputLayer.updateParameters();for(const t of this.transformers)t.updateParameters(),t.layerNorm1.updateParameters(),t.layerNorm2.updateParameters()});const r=i/t.length;console.log(`Epoch ${a+1}/${e} - Loss: ${r.toFixed(4)}`)}}}},363:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTransformer=void 0;const i=a(489);e.SimpleTransformer=class{wq;wk;wv;w1;w2;gradWq;gradWk;gradWv;gradW1;gradW2;layerNorm1;layerNorm2;learningRate=.001;embeddingDim;lastInput=[];lastQ=[];lastK=[];lastV=[];lastScores=[];lastAttentionWeights=[];lastAttnOutput=[];lastAttnResidual=[];lastAttnNorm=[];lastFF1=[];lastFFOutput=[];lastFFResidual=[];constructor(t){this.embeddingDim=t;const e=Math.sqrt(1/t);this.wq=this.initWeights(t,t,e),this.wk=this.initWeights(t,t,e),this.wv=this.initWeights(t,t,e),this.w1=this.initWeights(t,t,e),this.w2=this.initWeights(t,t,e),this.gradWq=this.initWeights(t,t,0),this.gradWk=this.initWeights(t,t,0),this.gradWv=this.initWeights(t,t,0),this.gradW1=this.initWeights(t,t,0),this.gradW2=this.initWeights(t,t,0),this.layerNorm1=new i.LayerNorm(t),this.layerNorm2=new i.LayerNorm(t)}initWeights(t,e,a){return Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}matmul(t,e){const a=[];for(let i=0;i<t.length;i++){a[i]=[];for(let r=0;r<e[0].length;r++){let s=0;for(let a=0;a<t[0].length;a++)s+=t[i][a]*e[a][r];a[i][r]=s}}return a}vecMatmul(t,e){const a=new Array(e[0].length).fill(0);for(let i=0;i<e[0].length;i++)for(let r=0;r<t.length;r++)a[i]+=t[r]*e[r][i];return a}transpose(t){const e=t.length,a=t[0].length,i=Array.from({length:a},()=>new Array(e));for(let r=0;r<e;r++)for(let e=0;e<a;e++)i[e][r]=t[r][e];return i}softmax(t){return t.map(t=>{const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),i=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/i)})}softmaxBackward(t,e){const a=[];for(let i=0;i<t.length;i++){const r=e[i],s=t[i],n=s.reduce((t,e,a)=>t+e*r[a],0);a[i]=r.map((t,e)=>t*(s[e]-n))}return a}attention(t){const e=t.length,a=Math.sqrt(this.embeddingDim);this.lastQ=t.map(t=>this.vecMatmul(t,this.wq)),this.lastK=t.map(t=>this.vecMatmul(t,this.wk)),this.lastV=t.map(t=>this.vecMatmul(t,this.wv)),this.lastScores=[];for(let t=0;t<e;t++){this.lastScores[t]=[];for(let i=0;i<e;i++){let e=0;for(let a=0;a<this.embeddingDim;a++)e+=this.lastQ[t][a]*this.lastK[i][a];this.lastScores[t][i]=e/a}}this.lastAttentionWeights=this.softmax(this.lastScores);const i=[];for(let t=0;t<e;t++){i[t]=new Array(this.embeddingDim).fill(0);for(let a=0;a<e;a++)for(let e=0;e<this.embeddingDim;e++)i[t][e]+=this.lastAttentionWeights[t][a]*this.lastV[a][e]}return i}feedForward(t){return this.lastFF1=t.map(t=>this.vecMatmul(t,this.w1).map(t=>Math.max(0,t))),this.lastFF1.map(t=>this.vecMatmul(t,this.w2))}forward(t){return this.lastInput=t.map(t=>[...t]),this.lastAttnOutput=this.attention(t),this.lastAttnResidual=this.lastAttnOutput.map((e,a)=>e.map((e,i)=>e+t[a][i])),this.lastAttnNorm=this.layerNorm1.forwardBatch(this.lastAttnResidual),this.lastFFOutput=this.feedForward(this.lastAttnNorm),this.lastFFResidual=this.lastFFOutput.map((t,e)=>t.map((t,a)=>t+this.lastAttnNorm[e][a])),this.layerNorm2.forwardBatch(this.lastFFResidual)}backward(t){const e=t.length,a=Math.sqrt(this.embeddingDim);let i=this.layerNorm2.backwardBatch(this.lastFFResidual,t);const r=i.map(t=>[...t]),s=i.map(t=>[...t]),n=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=r[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradW2[i][e]+=a*this.lastFF1[t][i],n[t][i]+=a*this.w2[i][e]}const o=n.map((t,e)=>t.map((t,a)=>this.lastFF1[e][a]>0?t:0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=o[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradW1[i][e]+=a*this.lastAttnNorm[t][i],s[t][i]+=a*this.w1[i][e]}const h=this.layerNorm1.backwardBatch(this.lastAttnResidual,s),l=h.map(t=>[...t]),d=h.map(t=>[...t]),m=Array.from({length:e},()=>new Array(e).fill(0)),g=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let a=0;a<this.embeddingDim;a++){const i=l[t][a];for(let r=0;r<e;r++)m[t][r]+=i*this.lastV[r][a],g[r][a]+=i*this.lastAttentionWeights[t][r]}const c=this.softmaxBackward(m,this.lastAttentionWeights).map(t=>t.map(t=>t/a)),u=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0)),p=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let a=0;a<e;a++){const e=c[t][a];for(let i=0;i<this.embeddingDim;i++)u[t][i]+=e*this.lastK[a][i],p[a][i]+=e*this.lastQ[t][i]}const f=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=u[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradWq[i][e]+=a*this.lastInput[t][i],f[t][i]+=a*this.wq[i][e]}for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=p[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradWk[i][e]+=a*this.lastInput[t][i],f[t][i]+=a*this.wk[i][e]}for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=g[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradWv[i][e]+=a*this.lastInput[t][i],f[t][i]+=a*this.wv[i][e]}return d.map((t,e)=>t.map((t,a)=>t+f[e][a]))}zeroGrad(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++)this.gradWq[t][e]=0,this.gradWk[t][e]=0,this.gradWv[t][e]=0,this.gradW1[t][e]=0,this.gradW2[t][e]=0}updateParameters(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++){const a=Math.max(-5,Math.min(5,this.gradWq[t][e]));this.wq[t][e]+=this.learningRate*a;const i=Math.max(-5,Math.min(5,this.gradWk[t][e]));this.wk[t][e]+=this.learningRate*i;const r=Math.max(-5,Math.min(5,this.gradWv[t][e]));this.wv[t][e]+=this.learningRate*r;const s=Math.max(-5,Math.min(5,this.gradW1[t][e]));this.w1[t][e]+=this.learningRate*s;const n=Math.max(-5,Math.min(5,this.gradW2[t][e]));this.w2[t][e]+=this.learningRate*n}}}},383:(t,e)=>{function a(t,e){const a=new Array(e);for(let i=0;i<e;i++){const r=t/Math.pow(1e4,2*Math.floor(i/2)/e);a[i]=i%2==0?Math.sin(r):Math.cos(r)}return a}Object.defineProperty(e,"__esModule",{value:!0}),e.PositionalEncodingCache=void 0,e.getPositionalEncoding=a,e.addPositionalEncoding=function(t,e){return t.map((t,i)=>{const r=a(i,e);return t.map((t,e)=>t+r[e])})},e.PositionalEncodingCache=class{cache=new Map;embeddingDim;constructor(t){this.embeddingDim=t}get(t){const e=`${t}`;if(!this.cache.has(e)){const i=a(t,this.embeddingDim);this.cache.set(e,i)}return this.cache.get(e)}addToEmbedding(t,e){const a=this.get(e);return t.map((t,e)=>t+a[e])}addToEmbeddings(t){return t.map((t,e)=>this.addToEmbedding(t,e))}}},405:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTokenizer=void 0,e.SimpleTokenizer=class{vocab;vocabMap;unkIndex;constructor(t){this.vocab=t,this.vocabMap=Object.fromEntries(t.map((t,e)=>[t,e])),this.unkIndex=this.vocabMap["[UNK]"]??0}encode(t){return t.toLowerCase().split(" ").map(t=>t.trim()).filter(t=>t.length>0).map(t=>this.vocabMap[t]??this.unkIndex)}decode(t){return t.map(t=>this.vocab[t]??"[UNK]").join(" ")}}},489:(t,e)=>{function a(t,e=1e-8){const a=t.reduce((t,e)=>t+e,0)/t.length,i=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/t.length,r=Math.sqrt(i+e);return{normalized:t.map(t=>(t-a)/r),mean:a,std:r}}Object.defineProperty(e,"__esModule",{value:!0}),e.LayerNorm=void 0,e.layerNormalize=a,e.batchLayerNormalize=function(t,e=1e-8){return t.map(t=>a(t,e).normalized)},e.LayerNorm=class{epsilon;gamma;beta;dim;learningRate=.001;gradGamma;gradBeta;lastMean=[];lastVar=[];lastStd=[];lastNormalized=[];lastInput=[];constructor(t,e=1e-8){this.dim=t,this.epsilon=e,this.gamma=Array(t).fill(1),this.beta=Array(t).fill(0),this.gradGamma=Array(t).fill(0),this.gradBeta=Array(t).fill(0)}forward(t){const e=t.reduce((t,e)=>t+e,0)/this.dim,a=t.reduce((t,a)=>t+Math.pow(a-e,2),0)/this.dim,i=Math.sqrt(a+this.epsilon);return t.map(t=>(t-e)/i).map((t,e)=>this.gamma[e]*t+this.beta[e])}forwardBatch(t){return this.lastInput=t.map(t=>[...t]),this.lastMean=[],this.lastVar=[],this.lastStd=[],this.lastNormalized=[],t.map((t,e)=>{const a=t.reduce((t,e)=>t+e,0)/this.dim,i=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/this.dim,r=Math.sqrt(i+this.epsilon);this.lastMean[e]=a,this.lastVar[e]=i,this.lastStd[e]=r;const s=t.map(t=>(t-a)/r);return this.lastNormalized[e]=[...s],s.map((t,e)=>this.gamma[e]*t+this.beta[e])})}backward(t,e,a){const i=this.dim,r=(this.lastMean[a],this.lastStd[a]),s=this.lastNormalized[a];for(let t=0;t<i;t++)this.gradGamma[t]+=e[t]*s[t],this.gradBeta[t]+=e[t];const n=e.map((t,e)=>t*this.gamma[e]),o=n.reduce((t,e)=>t+e,0)/i,h=n.reduce((t,e,a)=>t+e*s[a],0)/i;return n.map((t,e)=>(t-o-s[e]*h)/r)}zeroGrad(){this.gradGamma.fill(0),this.gradBeta.fill(0)}updateParameters(){for(let t=0;t<this.dim;t++){const e=Math.max(-5,Math.min(5,this.gradGamma[t])),a=Math.max(-5,Math.min(5,this.gradBeta[t]));this.gamma[t]+=this.learningRate*e,this.beta[t]+=this.learningRate*a}}backwardBatch(t,e){return t.map((t,a)=>this.backward(t,e[a],a))}}},766:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.trainingData=void 0,e.createVocab=function(t){const e=["[PAD]","[UNK]","[EOS]"],a=new Set(e);return t.forEach(t=>{t.input.toLowerCase().split(" ").forEach(t=>{const i=t.trim();i&&!a.has(i)&&(e.push(i),a.add(i))}),t.target.toLowerCase().split(" ").forEach(t=>{const i=t.trim();i&&!a.has(i)&&(e.push(i),a.add(i))})}),console.log("Vocabulary created. First 10 words:",e.slice(0,10)),console.log("[PAD] index:",e.indexOf("[PAD]")),console.log("[UNK] index:",e.indexOf("[UNK]")),console.log("[EOS] index:",e.indexOf("[EOS]")),e},e.trainingData=[{input:"hello",target:"hi there"},{input:"hi",target:"hello friend"},{input:"hey",target:"hey how are you"},{input:"good morning",target:"good morning to you"},{input:"good afternoon",target:"good afternoon friend"},{input:"good evening",target:"good evening"},{input:"goodbye",target:"see you later"},{input:"bye",target:"goodbye friend"},{input:"how are you",target:"I am doing well thank you"},{input:"what is your name",target:"I am a simple AI assistant"},{input:"who are you",target:"I am an AI chatbot"},{input:"where are you from",target:"I exist in the digital world"},{input:"what can you do",target:"I can chat and answer questions"},{input:"how old are you",target:"I was just created recently"},{input:"thank you",target:"you are welcome"},{input:"thanks",target:"my pleasure to help"},{input:"sorry",target:"no problem at all"},{input:"excuse me",target:"yes how can I help"},{input:"how is the weather",target:"I hope it is nice today"},{input:"is it sunny",target:"I cannot see outside but I hope so"},{input:"is it raining",target:"I am not sure about the weather"},{input:"what colors do you know",target:"red blue green yellow orange purple"},{input:"colors",target:"red blue green yellow orange purple pink"},{input:"primary colors",target:"red blue yellow"},{input:"favorite color",target:"I like blue and green"},{input:"what animals do you know",target:"cat dog bird fish elephant lion"},{input:"animals",target:"cat dog bird fish elephant tiger bear"},{input:"pets",target:"cat dog fish bird hamster"},{input:"wild animals",target:"lion tiger elephant bear wolf"},{input:"favorite animal",target:"I think cats and dogs are nice"},{input:"fruits",target:"apple banana orange grape strawberry"},{input:"what fruits do you know",target:"apple banana orange grape melon"},{input:"favorite fruit",target:"I think apples are popular"},{input:"food",target:"pizza pasta burger salad rice"},{input:"what do you eat",target:"I do not eat but people like pizza"},{input:"favorite food",target:"many people like pizza and pasta"},{input:"count to five",target:"one two three four five"},{input:"numbers",target:"one two three four five six seven"},{input:"how many",target:"I can count many things"},{input:"are you happy",target:"yes I am happy to chat"},{input:"are you sad",target:"no I am doing well"},{input:"do you have feelings",target:"I am an AI but I enjoy talking"},{input:"I am happy",target:"that is wonderful to hear"},{input:"I am sad",target:"I am sorry to hear that"},{input:"what do you like",target:"I like learning and chatting"},{input:"hobbies",target:"reading music sports games art"},{input:"do you like music",target:"music is very nice"},{input:"do you like sports",target:"sports are fun and healthy"},{input:"family",target:"mother father sister brother"},{input:"do you have family",target:"I do not but family is important"},{input:"where do you live",target:"I live in the computer"},{input:"places",target:"home school park city beach mountain"},{input:"favorite place",target:"I think the beach is nice"},{input:"what time is it",target:"I do not know the current time"},{input:"when",target:"I am not sure about the time"},{input:"days of week",target:"monday tuesday wednesday thursday friday saturday sunday"},{input:"yes",target:"okay great"},{input:"no",target:"I understand"},{input:"maybe",target:"that is possible"},{input:"I agree",target:"good we are on the same page"},{input:"I disagree",target:"that is okay we can differ"},{input:"help me",target:"how can I help you"},{input:"I need help",target:"what do you need help with"},{input:"can you help",target:"yes I will try to help"},{input:"teach me",target:"what would you like to learn"},{input:"I want to learn",target:"learning is wonderful"},{input:"tell me about",target:"what topic interests you"}]}},e={};function a(i){var r=e[i];if(void 0!==r)return r.exports;var s=e[i]={exports:{}};return t[i](s,s.exports,a),s.exports}(()=>{const t=a(219),e=a(766);let i,r=!1,s=!1;function n(){const a=(0,e.createVocab)(e.trainingData);i=new t.SimpleLLM(a,64,3),console.log("Vocabulary:",a),console.log("Vocabulary size:",a.length),console.log("First 20 vocab words:",a.slice(0,20)),console.log("Training data count:",e.trainingData.length);const n=document.getElementById("train-button"),o=document.getElementById("predict-button"),h=document.getElementById("user-input"),l=document.getElementById("output"),d=document.getElementById("status");n.addEventListener("click",async()=>{r||(r=!0,s=!1,n.disabled=!0,o.disabled=!0,h.disabled=!0,d.textContent="Training...",l.innerHTML='<div class="message">Training started...</div>',setTimeout(()=>{try{const t=100;i.train(e.trainingData,t),d.textContent="Training completed!",l.innerHTML+='<div class="message success">Training completed! You can now chat with the AI.</div>',s=!0,o.disabled=!1,h.disabled=!1}catch(t){d.textContent="Training failed",l.innerHTML+=`<div class="message error">Error: ${t}</div>`,console.error(t)}finally{r=!1,n.disabled=!1}},100))}),o.addEventListener("click",()=>{const t=h.value.trim();if(t)if(s)try{const e=i.predict(t,10),a=document.createElement("div");a.className="message user-message",a.textContent=`You: ${t}`,l.appendChild(a);const r=document.createElement("div");r.className="message ai-message",r.textContent=`AI: ${e}`,l.appendChild(r),l.scrollTop=l.scrollHeight,h.value=""}catch(t){const e=document.createElement("div");e.className="message error",e.textContent=`Error: ${t}`,l.appendChild(e),console.error(t)}else alert("Please train the model first");else alert("Please enter some text")}),h.addEventListener("keypress",t=>{"Enter"===t.key&&o.click()}),d.textContent='Ready. Click "Train Model" to start.'}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n()})()})();