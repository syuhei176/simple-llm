(()=>{"use strict";var t={49:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OutputLayer=void 0,e.OutputLayer=class{weights;bias;gradWeights;gradBias;learningRate=.001;vocabSize;embeddingDim;constructor(t,e){this.embeddingDim=t,this.vocabSize=e;const a=Math.sqrt(1/(t+e));this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a)),this.bias=Array.from({length:e},()=>0),this.gradWeights=Array.from({length:t},()=>Array.from({length:e},()=>0)),this.gradBias=Array.from({length:e},()=>0)}forward(t){const e=new Array(this.vocabSize).fill(0);for(let a=0;a<this.vocabSize;a++){let r=this.bias[a];for(let e=0;e<this.embeddingDim;e++)r+=t[e]*this.weights[e][a];e[a]=r}return e}softmax(t){const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),r=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/r)}backward(t,e){const a=new Array(this.embeddingDim).fill(0);for(let r=0;r<this.embeddingDim;r++)for(let i=0;i<this.vocabSize;i++)this.gradWeights[r][i]+=e[i]*t[r],a[r]+=e[i]*this.weights[r][i];for(let t=0;t<this.vocabSize;t++)this.gradBias[t]+=e[t];return a}zeroGrad(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.vocabSize;e++)this.gradWeights[t][e]=0;for(let t=0;t<this.vocabSize;t++)this.gradBias[t]=0}updateParameters(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.vocabSize;e++){const a=Math.max(-5,Math.min(5,this.gradWeights[t][e]));this.weights[t][e]+=this.learningRate*a}for(let t=0;t<this.vocabSize;t++){const e=Math.max(-5,Math.min(5,this.gradBias[t]));this.bias[t]+=this.learningRate*e}}}},77:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EmbeddingLayer=void 0,e.EmbeddingLayer=class{weights;embeddingDim;learningRate=.001;constructor(t,e){this.embeddingDim=e;const a=Math.sqrt(1/e);this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}forward(t){return t<0||t>=this.weights.length?Array(this.embeddingDim).fill(0):[...this.weights[t]]}backward(t,e){if(!(t<0||t>=this.weights.length))for(let a=0;a<this.embeddingDim;a++){const r=Math.max(-5,Math.min(5,e[a]));this.weights[t][a]+=this.learningRate*r}}}},219:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleLLM=void 0;const r=a(405),i=a(363),o=a(77),n=a(49),s=a(383);class l{tokenizer;embedding;transformers;outputLayer;positionalEncoding;vocabSize;embeddingDim;numLayers;constructor(t,e=16,a=2){this.vocabSize=t.length,this.embeddingDim=e,this.numLayers=a,this.tokenizer=new r.SimpleTokenizer(t),this.embedding=new o.EmbeddingLayer(t.length,e),this.transformers=Array.from({length:a},()=>new i.SimpleTransformer(e)),this.outputLayer=new n.OutputLayer(e,t.length),this.positionalEncoding=new s.PositionalEncodingCache(e)}getSpecialTokenIndices(){const t=new Set;return["[PAD]","[UNK]","[EOS]"].forEach(e=>{const a=this.tokenizer.vocabMap[e];void 0!==a&&t.add(a)}),t}predict(t,e=10){let a=this.tokenizer.encode(t);const r=this.getSpecialTokenIndices(),i=this.tokenizer.vocabMap["[EOS]"];console.log("Input text:",t),console.log("Encoded tokens:",a),console.log("Special token indices:",Array.from(r)),console.log("Vocab size:",this.vocabSize);for(let t=0;t<e;t++){const e=a.map(t=>this.embedding.forward(t));let o=this.positionalEncoding.addToEmbeddings(e);for(const t of this.transformers)o=t.forward(o);const n=o[o.length-1],s=this.outputLayer.forward(n),l=this.outputLayer.softmax(s),d=l.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);console.log(`Step ${t} - Top 5 probs (before filter):`,d);const h=l.map((t,e)=>r.has(e)?0:t),m=h.reduce((t,e)=>t+e,1e-10),g=h.map(t=>t/m),u=Math.max(...g),c=g.indexOf(u);console.log(`Step ${t}: nextToken=${c}, maxProb=${u.toFixed(4)}, word="${this.tokenizer.vocab[c]}"`);const p=g.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);if(console.log(`Step ${t} - Top 5 probs (after filter):`,p),a.push(c),c===i)break}const o=this.tokenizer.decode(a);return console.log("Final result:",o),o}train(t,e=10){for(let a=0;a<e;a++){let r=0;t.forEach(({input:t,target:e})=>{for(const t of this.transformers)t.zeroGrad(),t.layerNorm1.zeroGrad(),t.layerNorm2.zeroGrad();this.outputLayer.zeroGrad();const a=this.tokenizer.encode(t),i=this.tokenizer.encode(e),o=a.map(t=>this.embedding.forward(t));let n=this.positionalEncoding.addToEmbeddings(o);for(const t of this.transformers)n=t.forward(n);const s=n,l=Math.min(s.length,i.length),d=Array.from({length:s.length},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<l;t++){const e=this.outputLayer.forward(s[t]),a=this.outputLayer.softmax(e),o=a.map(t=>-t);o[i[t]]+=1,r-=Math.log(a[i[t]]+1e-10);const n=this.outputLayer.backward(s[t],o);for(let e=0;e<this.embeddingDim;e++)d[t][e]=n[e]}let h=d;for(let t=this.transformers.length-1;t>=0;t--)h=this.transformers[t].backward(h);const m=h;for(let t=0;t<a.length&&t<m.length;t++)this.embedding.backward(a[t],m[t]);this.outputLayer.updateParameters();for(const t of this.transformers)t.updateParameters(),t.layerNorm1.updateParameters(),t.layerNorm2.updateParameters()});const i=r/t.length;console.log(`Epoch ${a+1}/${e} - Loss: ${i.toFixed(4)}`)}}serialize(){return{version:"1.0",config:{vocabSize:this.vocabSize,embeddingDim:this.embeddingDim,numLayers:this.numLayers,vocab:this.tokenizer.vocab},weights:{embedding:this.embedding.weights,transformers:this.transformers.map(t=>({wq:t.wq,wk:t.wk,wv:t.wv,w1:t.w1,w2:t.w2,layerNorm1:{gamma:t.layerNorm1.gamma,beta:t.layerNorm1.beta},layerNorm2:{gamma:t.layerNorm2.gamma,beta:t.layerNorm2.beta}})),output:{weights:this.outputLayer.weights,bias:this.outputLayer.bias}}}}static deserialize(t){const{config:e,weights:a}=t,r=new l(e.vocab,e.embeddingDim,e.numLayers);return r.embedding.weights=a.embedding,a.transformers.forEach((t,e)=>{r.transformers[e].wq=t.wq,r.transformers[e].wk=t.wk,r.transformers[e].wv=t.wv,r.transformers[e].w1=t.w1,r.transformers[e].w2=t.w2,r.transformers[e].layerNorm1.gamma=t.layerNorm1.gamma,r.transformers[e].layerNorm1.beta=t.layerNorm1.beta,r.transformers[e].layerNorm2.gamma=t.layerNorm2.gamma,r.transformers[e].layerNorm2.beta=t.layerNorm2.beta}),r.outputLayer.weights=a.output.weights,r.outputLayer.bias=a.output.bias,r}}e.SimpleLLM=l},363:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTransformer=void 0;const r=a(489);e.SimpleTransformer=class{wq;wk;wv;w1;w2;gradWq;gradWk;gradWv;gradW1;gradW2;layerNorm1;layerNorm2;learningRate=.001;embeddingDim;lastInput=[];lastQ=[];lastK=[];lastV=[];lastScores=[];lastAttentionWeights=[];lastAttnOutput=[];lastAttnResidual=[];lastAttnNorm=[];lastFF1=[];lastFFOutput=[];lastFFResidual=[];constructor(t){this.embeddingDim=t;const e=Math.sqrt(1/t);this.wq=this.initWeights(t,t,e),this.wk=this.initWeights(t,t,e),this.wv=this.initWeights(t,t,e),this.w1=this.initWeights(t,t,e),this.w2=this.initWeights(t,t,e),this.gradWq=this.initWeights(t,t,0),this.gradWk=this.initWeights(t,t,0),this.gradWv=this.initWeights(t,t,0),this.gradW1=this.initWeights(t,t,0),this.gradW2=this.initWeights(t,t,0),this.layerNorm1=new r.LayerNorm(t),this.layerNorm2=new r.LayerNorm(t)}initWeights(t,e,a){return Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}matmul(t,e){const a=[];for(let r=0;r<t.length;r++){a[r]=[];for(let i=0;i<e[0].length;i++){let o=0;for(let a=0;a<t[0].length;a++)o+=t[r][a]*e[a][i];a[r][i]=o}}return a}vecMatmul(t,e){const a=new Array(e[0].length).fill(0);for(let r=0;r<e[0].length;r++)for(let i=0;i<t.length;i++)a[r]+=t[i]*e[i][r];return a}transpose(t){const e=t.length,a=t[0].length,r=Array.from({length:a},()=>new Array(e));for(let i=0;i<e;i++)for(let e=0;e<a;e++)r[e][i]=t[i][e];return r}softmax(t){return t.map(t=>{const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),r=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/r)})}softmaxBackward(t,e){const a=[];for(let r=0;r<t.length;r++){const i=e[r],o=t[r],n=o.reduce((t,e,a)=>t+e*i[a],0);a[r]=i.map((t,e)=>t*(o[e]-n))}return a}attention(t){const e=t.length,a=Math.sqrt(this.embeddingDim);this.lastQ=t.map(t=>this.vecMatmul(t,this.wq)),this.lastK=t.map(t=>this.vecMatmul(t,this.wk)),this.lastV=t.map(t=>this.vecMatmul(t,this.wv)),this.lastScores=[];for(let t=0;t<e;t++){this.lastScores[t]=[];for(let r=0;r<e;r++){let e=0;for(let a=0;a<this.embeddingDim;a++)e+=this.lastQ[t][a]*this.lastK[r][a];this.lastScores[t][r]=e/a}}this.lastAttentionWeights=this.softmax(this.lastScores);const r=[];for(let t=0;t<e;t++){r[t]=new Array(this.embeddingDim).fill(0);for(let a=0;a<e;a++)for(let e=0;e<this.embeddingDim;e++)r[t][e]+=this.lastAttentionWeights[t][a]*this.lastV[a][e]}return r}feedForward(t){return this.lastFF1=t.map(t=>this.vecMatmul(t,this.w1).map(t=>Math.max(0,t))),this.lastFF1.map(t=>this.vecMatmul(t,this.w2))}forward(t){return this.lastInput=t.map(t=>[...t]),this.lastAttnOutput=this.attention(t),this.lastAttnResidual=this.lastAttnOutput.map((e,a)=>e.map((e,r)=>e+t[a][r])),this.lastAttnNorm=this.layerNorm1.forwardBatch(this.lastAttnResidual),this.lastFFOutput=this.feedForward(this.lastAttnNorm),this.lastFFResidual=this.lastFFOutput.map((t,e)=>t.map((t,a)=>t+this.lastAttnNorm[e][a])),this.layerNorm2.forwardBatch(this.lastFFResidual)}backward(t){const e=t.length,a=Math.sqrt(this.embeddingDim);let r=this.layerNorm2.backwardBatch(this.lastFFResidual,t);const i=r.map(t=>[...t]),o=r.map(t=>[...t]),n=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=i[t][e];for(let r=0;r<this.embeddingDim;r++)this.gradW2[r][e]+=a*this.lastFF1[t][r],n[t][r]+=a*this.w2[r][e]}const s=n.map((t,e)=>t.map((t,a)=>this.lastFF1[e][a]>0?t:0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=s[t][e];for(let r=0;r<this.embeddingDim;r++)this.gradW1[r][e]+=a*this.lastAttnNorm[t][r],o[t][r]+=a*this.w1[r][e]}const l=this.layerNorm1.backwardBatch(this.lastAttnResidual,o),d=l.map(t=>[...t]),h=l.map(t=>[...t]),m=Array.from({length:e},()=>new Array(e).fill(0)),g=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let a=0;a<this.embeddingDim;a++){const r=d[t][a];for(let i=0;i<e;i++)m[t][i]+=r*this.lastV[i][a],g[i][a]+=r*this.lastAttentionWeights[t][i]}const u=this.softmaxBackward(m,this.lastAttentionWeights).map(t=>t.map(t=>t/a)),c=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0)),p=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let a=0;a<e;a++){const e=u[t][a];for(let r=0;r<this.embeddingDim;r++)c[t][r]+=e*this.lastK[a][r],p[a][r]+=e*this.lastQ[t][r]}const f=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=c[t][e];for(let r=0;r<this.embeddingDim;r++)this.gradWq[r][e]+=a*this.lastInput[t][r],f[t][r]+=a*this.wq[r][e]}for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=p[t][e];for(let r=0;r<this.embeddingDim;r++)this.gradWk[r][e]+=a*this.lastInput[t][r],f[t][r]+=a*this.wk[r][e]}for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=g[t][e];for(let r=0;r<this.embeddingDim;r++)this.gradWv[r][e]+=a*this.lastInput[t][r],f[t][r]+=a*this.wv[r][e]}return h.map((t,e)=>t.map((t,a)=>t+f[e][a]))}zeroGrad(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++)this.gradWq[t][e]=0,this.gradWk[t][e]=0,this.gradWv[t][e]=0,this.gradW1[t][e]=0,this.gradW2[t][e]=0}updateParameters(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++){const a=Math.max(-5,Math.min(5,this.gradWq[t][e]));this.wq[t][e]+=this.learningRate*a;const r=Math.max(-5,Math.min(5,this.gradWk[t][e]));this.wk[t][e]+=this.learningRate*r;const i=Math.max(-5,Math.min(5,this.gradWv[t][e]));this.wv[t][e]+=this.learningRate*i;const o=Math.max(-5,Math.min(5,this.gradW1[t][e]));this.w1[t][e]+=this.learningRate*o;const n=Math.max(-5,Math.min(5,this.gradW2[t][e]));this.w2[t][e]+=this.learningRate*n}}}},383:(t,e)=>{function a(t,e){const a=new Array(e);for(let r=0;r<e;r++){const i=t/Math.pow(1e4,2*Math.floor(r/2)/e);a[r]=r%2==0?Math.sin(i):Math.cos(i)}return a}Object.defineProperty(e,"__esModule",{value:!0}),e.PositionalEncodingCache=void 0,e.getPositionalEncoding=a,e.addPositionalEncoding=function(t,e){return t.map((t,r)=>{const i=a(r,e);return t.map((t,e)=>t+i[e])})},e.PositionalEncodingCache=class{cache=new Map;embeddingDim;constructor(t){this.embeddingDim=t}get(t){const e=`${t}`;if(!this.cache.has(e)){const r=a(t,this.embeddingDim);this.cache.set(e,r)}return this.cache.get(e)}addToEmbedding(t,e){const a=this.get(e);return t.map((t,e)=>t+a[e])}addToEmbeddings(t){return t.map((t,e)=>this.addToEmbedding(t,e))}}},405:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTokenizer=void 0,e.SimpleTokenizer=class{vocab;vocabMap;unkIndex;constructor(t){this.vocab=t,this.vocabMap=Object.fromEntries(t.map((t,e)=>[t,e])),this.unkIndex=this.vocabMap["[UNK]"]??0}encode(t){return t.toLowerCase().split(" ").map(t=>t.trim()).filter(t=>t.length>0).map(t=>this.vocabMap[t]??this.unkIndex)}decode(t){return t.map(t=>this.vocab[t]??"[UNK]").join(" ")}}},489:(t,e)=>{function a(t,e=1e-8){const a=t.reduce((t,e)=>t+e,0)/t.length,r=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/t.length,i=Math.sqrt(r+e);return{normalized:t.map(t=>(t-a)/i),mean:a,std:i}}Object.defineProperty(e,"__esModule",{value:!0}),e.LayerNorm=void 0,e.layerNormalize=a,e.batchLayerNormalize=function(t,e=1e-8){return t.map(t=>a(t,e).normalized)},e.LayerNorm=class{epsilon;gamma;beta;dim;learningRate=.001;gradGamma;gradBeta;lastMean=[];lastVar=[];lastStd=[];lastNormalized=[];lastInput=[];constructor(t,e=1e-8){this.dim=t,this.epsilon=e,this.gamma=Array(t).fill(1),this.beta=Array(t).fill(0),this.gradGamma=Array(t).fill(0),this.gradBeta=Array(t).fill(0)}forward(t){const e=t.reduce((t,e)=>t+e,0)/this.dim,a=t.reduce((t,a)=>t+Math.pow(a-e,2),0)/this.dim,r=Math.sqrt(a+this.epsilon);return t.map(t=>(t-e)/r).map((t,e)=>this.gamma[e]*t+this.beta[e])}forwardBatch(t){return this.lastInput=t.map(t=>[...t]),this.lastMean=[],this.lastVar=[],this.lastStd=[],this.lastNormalized=[],t.map((t,e)=>{const a=t.reduce((t,e)=>t+e,0)/this.dim,r=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/this.dim,i=Math.sqrt(r+this.epsilon);this.lastMean[e]=a,this.lastVar[e]=r,this.lastStd[e]=i;const o=t.map(t=>(t-a)/i);return this.lastNormalized[e]=[...o],o.map((t,e)=>this.gamma[e]*t+this.beta[e])})}backward(t,e,a){const r=this.dim,i=(this.lastMean[a],this.lastStd[a]),o=this.lastNormalized[a];for(let t=0;t<r;t++)this.gradGamma[t]+=e[t]*o[t],this.gradBeta[t]+=e[t];const n=e.map((t,e)=>t*this.gamma[e]),s=n.reduce((t,e)=>t+e,0)/r,l=n.reduce((t,e,a)=>t+e*o[a],0)/r;return n.map((t,e)=>(t-s-o[e]*l)/i)}zeroGrad(){this.gradGamma.fill(0),this.gradBeta.fill(0)}updateParameters(){for(let t=0;t<this.dim;t++){const e=Math.max(-5,Math.min(5,this.gradGamma[t])),a=Math.max(-5,Math.min(5,this.gradBeta[t]));this.gamma[t]+=this.learningRate*e,this.beta[t]+=this.learningRate*a}}backwardBatch(t,e){return t.map((t,a)=>this.backward(t,e[a],a))}}},766:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.trainingData=void 0,e.createVocab=function(t){const e=["[PAD]","[UNK]","[EOS]"],a=new Set(e);return t.forEach(t=>{t.input.toLowerCase().split(" ").forEach(t=>{const r=t.trim();r&&!a.has(r)&&(e.push(r),a.add(r))}),t.target.toLowerCase().split(" ").forEach(t=>{const r=t.trim();r&&!a.has(r)&&(e.push(r),a.add(r))})}),console.log("Vocabulary created. First 10 words:",e.slice(0,10)),console.log("[PAD] index:",e.indexOf("[PAD]")),console.log("[UNK] index:",e.indexOf("[UNK]")),console.log("[EOS] index:",e.indexOf("[EOS]")),e},e.trainingData=[{input:"hello",target:"hi there"},{input:"hi",target:"hello friend"},{input:"hey",target:"hey how are you"},{input:"good morning",target:"good morning to you"},{input:"good afternoon",target:"good afternoon friend"},{input:"good evening",target:"good evening"},{input:"goodbye",target:"see you later"},{input:"bye",target:"goodbye friend"},{input:"how are you",target:"I am doing well thank you"},{input:"what is your name",target:"I am a simple AI assistant"},{input:"who are you",target:"I am an AI chatbot"},{input:"where are you from",target:"I exist in the digital world"},{input:"what can you do",target:"I can chat and answer questions"},{input:"how old are you",target:"I was just created recently"},{input:"thank you",target:"you are welcome"},{input:"thanks",target:"my pleasure to help"},{input:"sorry",target:"no problem at all"},{input:"excuse me",target:"yes how can I help"},{input:"how is the weather",target:"I hope it is nice today"},{input:"is it sunny",target:"I cannot see outside but I hope so"},{input:"is it raining",target:"I am not sure about the weather"},{input:"what colors do you know",target:"red blue green yellow orange purple"},{input:"colors",target:"red blue green yellow orange purple pink"},{input:"primary colors",target:"red blue yellow"},{input:"favorite color",target:"I like blue and green"},{input:"what animals do you know",target:"cat dog bird fish elephant lion"},{input:"animals",target:"cat dog bird fish elephant tiger bear"},{input:"pets",target:"cat dog fish bird hamster"},{input:"wild animals",target:"lion tiger elephant bear wolf"},{input:"favorite animal",target:"I think cats and dogs are nice"},{input:"fruits",target:"apple banana orange grape strawberry"},{input:"what fruits do you know",target:"apple banana orange grape melon"},{input:"favorite fruit",target:"I think apples are popular"},{input:"food",target:"pizza pasta burger salad rice"},{input:"what do you eat",target:"I do not eat but people like pizza"},{input:"favorite food",target:"many people like pizza and pasta"},{input:"count to five",target:"one two three four five"},{input:"numbers",target:"one two three four five six seven"},{input:"how many",target:"I can count many things"},{input:"are you happy",target:"yes I am happy to chat"},{input:"are you sad",target:"no I am doing well"},{input:"do you have feelings",target:"I am an AI but I enjoy talking"},{input:"I am happy",target:"that is wonderful to hear"},{input:"I am sad",target:"I am sorry to hear that"},{input:"what do you like",target:"I like learning and chatting"},{input:"hobbies",target:"reading music sports games art"},{input:"do you like music",target:"music is very nice"},{input:"do you like sports",target:"sports are fun and healthy"},{input:"family",target:"mother father sister brother"},{input:"do you have family",target:"I do not but family is important"},{input:"where do you live",target:"I live in the computer"},{input:"places",target:"home school park city beach mountain"},{input:"favorite place",target:"I think the beach is nice"},{input:"what time is it",target:"I do not know the current time"},{input:"when",target:"I am not sure about the time"},{input:"days of week",target:"monday tuesday wednesday thursday friday saturday sunday"},{input:"yes",target:"okay great"},{input:"no",target:"I understand"},{input:"maybe",target:"that is possible"},{input:"I agree",target:"good we are on the same page"},{input:"I disagree",target:"that is okay we can differ"},{input:"help me",target:"how can I help you"},{input:"I need help",target:"what do you need help with"},{input:"can you help",target:"yes I will try to help"},{input:"teach me",target:"what would you like to learn"},{input:"I want to learn",target:"learning is wonderful"},{input:"tell me about",target:"what topic interests you"},{input:"greetings",target:"hello and welcome"},{input:"howdy",target:"howdy partner"},{input:"nice to meet you",target:"nice to meet you too"},{input:"pleased to meet you",target:"the pleasure is mine"},{input:"good to see you",target:"good to see you as well"},{input:"I am excited",target:"that is great to hear"},{input:"I am tired",target:"you should get some rest"},{input:"I am confused",target:"let me help clarify things"},{input:"I am grateful",target:"I am glad I could help"},{input:"I feel great",target:"wonderful keep that energy"},{input:"I feel terrible",target:"I hope you feel better soon"},{input:"nice weather",target:"yes the weather is lovely"},{input:"bad weather",target:"I hope it improves soon"},{input:"it is cold",target:"make sure to stay warm"},{input:"it is hot",target:"stay cool and hydrated"},{input:"weather forecast",target:"I cannot check the weather"},{input:"drinks",target:"water juice coffee tea soda milk"},{input:"breakfast",target:"eggs toast cereal pancakes bacon"},{input:"lunch",target:"sandwich soup salad burger pizza"},{input:"dinner",target:"pasta chicken fish rice vegetables"},{input:"dessert",target:"cake ice cream cookies pie chocolate"},{input:"I am hungry",target:"you should eat something"},{input:"I am thirsty",target:"have a glass of water"},{input:"sports",target:"soccer basketball football tennis baseball"},{input:"play soccer",target:"soccer is a popular sport"},{input:"play basketball",target:"basketball is exciting"},{input:"go swimming",target:"swimming is great exercise"},{input:"favorite sport",target:"many people like soccer"},{input:"movies",target:"action comedy drama horror romance"},{input:"music genres",target:"rock pop jazz classical hip hop"},{input:"books",target:"fiction mystery thriller fantasy biography"},{input:"games",target:"video games board games card games puzzles"},{input:"watch movies",target:"movies are entertaining"},{input:"listen to music",target:"music is wonderful"},{input:"read books",target:"reading is enriching"},{input:"play games",target:"games are fun"},{input:"computer",target:"computers are very useful tools"},{input:"phone",target:"phones help us stay connected"},{input:"internet",target:"the internet connects the world"},{input:"technology",target:"technology is advancing rapidly"},{input:"laptop",target:"laptops are portable computers"},{input:"tablet",target:"tablets are convenient devices"},{input:"work",target:"I hope your work is going well"},{input:"job",target:"what kind of job do you have"},{input:"study",target:"what are you studying"},{input:"school",target:"how is school going"},{input:"homework",target:"I hope homework is not too difficult"},{input:"exam",target:"good luck on your exam"},{input:"project",target:"what project are you working on"},{input:"friends",target:"friends are important in life"},{input:"best friend",target:"best friends are special"},{input:"meet people",target:"meeting new people is nice"},{input:"talk to someone",target:"communication is important"},{input:"wake up",target:"good morning rise and shine"},{input:"go to sleep",target:"good night sleep well"},{input:"take a break",target:"breaks are important for rest"},{input:"relax",target:"relaxation is good for health"},{input:"exercise",target:"exercise is good for body and mind"},{input:"cook",target:"cooking is a useful skill"},{input:"clean",target:"keeping things clean is important"},{input:"nature",target:"nature is beautiful and peaceful"},{input:"trees",target:"trees provide oxygen and shade"},{input:"flowers",target:"flowers are colorful and pretty"},{input:"mountains",target:"mountains are majestic"},{input:"ocean",target:"the ocean is vast and mysterious"},{input:"river",target:"rivers flow through the land"},{input:"forest",target:"forests are full of life"},{input:"seasons",target:"spring summer autumn winter"},{input:"spring",target:"spring brings new growth"},{input:"summer",target:"summer is warm and sunny"},{input:"autumn",target:"autumn has beautiful colors"},{input:"fall",target:"fall is harvest time"},{input:"winter",target:"winter is cold and snowy"},{input:"months",target:"january february march april may june"},{input:"bright colors",target:"yellow orange red pink"},{input:"dark colors",target:"black brown gray navy"},{input:"rainbow",target:"red orange yellow green blue indigo violet"},{input:"can you",target:"I will try my best"},{input:"will you",target:"yes I will help"},{input:"would you",target:"of course"},{input:"could you",target:"certainly I can"},{input:"why",target:"that is a good question"},{input:"when",target:"timing depends on context"},{input:"where",target:"location varies by situation"},{input:"which",target:"there are several options"},{input:"amazing",target:"yes that is truly amazing"},{input:"wonderful",target:"absolutely wonderful"},{input:"perfect",target:"that sounds perfect"},{input:"excellent",target:"excellent indeed"},{input:"fantastic",target:"that is fantastic news"},{input:"great job",target:"thank you very much"},{input:"well done",target:"I appreciate that"},{input:"I understand",target:"I am glad we are on the same page"},{input:"I see",target:"yes I hope that makes sense"},{input:"makes sense",target:"great I am glad it is clear"},{input:"got it",target:"wonderful"}]},957:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ModelStorage=void 0,e.ModelStorage=class{dbName="SimpleLLMDB";storeName="models";version=1;async openDB(){return new Promise((t,e)=>{const a=indexedDB.open(this.dbName,this.version);a.onerror=()=>e(a.error),a.onsuccess=()=>t(a.result),a.onupgradeneeded=t=>{const e=t.target.result;e.objectStoreNames.contains(this.storeName)||e.createObjectStore(this.storeName,{keyPath:"id"})}})}async saveModel(t,e="default"){const a=await this.openDB();return new Promise((r,i)=>{const o=a.transaction([this.storeName],"readwrite"),n=o.objectStore(this.storeName),s={id:e,modelData:t,timestamp:Date.now()},l=n.put(s);l.onsuccess=()=>{console.log("Model saved successfully to IndexedDB"),r()},l.onerror=()=>i(l.error),o.oncomplete=()=>a.close()})}async loadModel(t="default"){const e=await this.openDB();return new Promise((a,r)=>{const i=e.transaction([this.storeName],"readonly"),o=i.objectStore(this.storeName).get(t);o.onsuccess=()=>{const t=o.result;t?(console.log("Model loaded successfully from IndexedDB"),a(t.modelData)):(console.log("No saved model found"),a(null))},o.onerror=()=>r(o.error),i.oncomplete=()=>e.close()})}async listModels(){const t=await this.openDB();return new Promise((e,a)=>{const r=t.transaction([this.storeName],"readonly"),i=r.objectStore(this.storeName),o=i.getAllKeys();o.onsuccess=()=>{o.result;const t=i.getAll();t.onsuccess=()=>{const a=t.result.map(t=>({id:t.id,timestamp:t.timestamp}));e(a)},t.onerror=()=>a(t.error)},o.onerror=()=>a(o.error),r.oncomplete=()=>t.close()})}async deleteModel(t="default"){const e=await this.openDB();return new Promise((a,r)=>{const i=e.transaction([this.storeName],"readwrite"),o=i.objectStore(this.storeName).delete(t);o.onsuccess=()=>{console.log("Model deleted successfully from IndexedDB"),a()},o.onerror=()=>r(o.error),i.oncomplete=()=>e.close()})}}}},e={};function a(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={exports:{}};return t[r](o,o.exports,a),o.exports}(()=>{const t=a(219),e=a(766),r=a(957);let i,o=!1,n=!1;const s=new r.ModelStorage;function l(){const a=(0,e.createVocab)(e.trainingData);i=new t.SimpleLLM(a,64,3),console.log("Vocabulary:",a),console.log("Vocabulary size:",a.length),console.log("First 20 vocab words:",a.slice(0,20)),console.log("Training data count:",e.trainingData.length);const r=document.getElementById("train-button"),l=document.getElementById("predict-button"),d=document.getElementById("save-button"),h=document.getElementById("load-button"),m=document.getElementById("user-input"),g=document.getElementById("output"),u=document.getElementById("status");r.addEventListener("click",async()=>{o||(o=!0,n=!1,r.disabled=!0,l.disabled=!0,m.disabled=!0,u.textContent="Training...",g.innerHTML='<div class="message">Training started...</div>',setTimeout(()=>{try{const t=100;i.train(e.trainingData,t),u.textContent="Training completed!",g.innerHTML+='<div class="message success">Training completed! You can now chat with the AI.</div>',n=!0,l.disabled=!1,m.disabled=!1}catch(t){u.textContent="Training failed",g.innerHTML+=`<div class="message error">Error: ${t}</div>`,console.error(t)}finally{o=!1,r.disabled=!1}},100))}),l.addEventListener("click",()=>{const t=m.value.trim();if(t)if(n)try{const e=i.predict(t,10),a=document.createElement("div");a.className="message user-message",a.textContent=`You: ${t}`,g.appendChild(a);const r=document.createElement("div");r.className="message ai-message",r.textContent=`AI: ${e}`,g.appendChild(r),g.scrollTop=g.scrollHeight,m.value=""}catch(t){const e=document.createElement("div");e.className="message error",e.textContent=`Error: ${t}`,g.appendChild(e),console.error(t)}else alert("Please train the model first");else alert("Please enter some text")}),m.addEventListener("keypress",t=>{"Enter"===t.key&&l.click()}),d.addEventListener("click",async()=>{if(n)try{d.disabled=!0,u.textContent="Saving model...";const t=i.serialize();await s.saveModel(t);const e=document.createElement("div");e.className="message success",e.textContent="Model saved successfully to IndexedDB!",g.appendChild(e),g.scrollTop=g.scrollHeight,u.textContent="Model saved!"}catch(t){const e=document.createElement("div");e.className="message error",e.textContent=`Failed to save model: ${t}`,g.appendChild(e),console.error(t),u.textContent="Save failed"}finally{d.disabled=!1}else alert("Please train the model first before saving")}),h.addEventListener("click",async()=>{try{h.disabled=!0,u.textContent="Loading model...";const e=await s.loadModel();if(e){i=t.SimpleLLM.deserialize(e),n=!0,l.disabled=!1,m.disabled=!1;const a=document.createElement("div");a.className="message success",a.textContent="Model loaded successfully from IndexedDB! You can now chat with the AI.",g.appendChild(a),g.scrollTop=g.scrollHeight,u.textContent="Model loaded!"}else{const t=document.createElement("div");t.className="message error",t.textContent="No saved model found. Please train a model first.",g.appendChild(t),u.textContent="No saved model found"}}catch(t){const e=document.createElement("div");e.className="message error",e.textContent=`Failed to load model: ${t}`,g.appendChild(e),console.error(t),u.textContent="Load failed"}finally{h.disabled=!1}}),u.textContent='Ready. Click "Train Model" to start or "Load Model" to load a saved model.'}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",l):l()})()})();