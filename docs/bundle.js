(()=>{"use strict";var t={179:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OutputLayer=void 0,e.OutputLayer=class{weights;bias;gradWeights;gradBias;learningRate=.001;vocabSize;embeddingDim;constructor(t,e){this.embeddingDim=t,this.vocabSize=e;const a=Math.sqrt(1/(t+e));this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a)),this.bias=Array.from({length:e},()=>0),this.gradWeights=Array.from({length:t},()=>Array.from({length:e},()=>0)),this.gradBias=Array.from({length:e},()=>0)}forward(t){const e=new Array(this.vocabSize).fill(0);for(let a=0;a<this.vocabSize;a++){let i=this.bias[a];for(let e=0;e<this.embeddingDim;e++)i+=t[e]*this.weights[e][a];e[a]=i}return e}softmax(t){const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),i=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/i)}backward(t,e){const a=new Array(this.embeddingDim).fill(0);for(let i=0;i<this.embeddingDim;i++)for(let s=0;s<this.vocabSize;s++)this.gradWeights[i][s]+=e[s]*t[i],a[i]+=e[s]*this.weights[i][s];for(let t=0;t<this.vocabSize;t++)this.gradBias[t]+=e[t];return a}zeroGrad(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.vocabSize;e++)this.gradWeights[t][e]=0;for(let t=0;t<this.vocabSize;t++)this.gradBias[t]=0}updateParameters(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.vocabSize;e++){const a=Math.max(-5,Math.min(5,this.gradWeights[t][e]));this.weights[t][e]+=this.learningRate*a}for(let t=0;t<this.vocabSize;t++){const e=Math.max(-5,Math.min(5,this.gradBias[t]));this.bias[t]+=this.learningRate*e}}}},211:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTokenizer=void 0,e.SimpleTokenizer=class{vocab;vocabMap;unkIndex;constructor(t){this.vocab=t,this.vocabMap=Object.fromEntries(t.map((t,e)=>[t,e])),this.unkIndex=this.vocabMap["[UNK]"]??0}encode(t){return t.toLowerCase().split(" ").map(t=>t.trim()).filter(t=>t.length>0).map(t=>this.vocabMap[t]??this.unkIndex)}decode(t){return t.map(t=>this.vocab[t]??"[UNK]").join(" ")}}},499:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EmbeddingLayer=void 0,e.EmbeddingLayer=class{weights;embeddingDim;learningRate=.001;constructor(t,e){this.embeddingDim=e;const a=Math.sqrt(1/e);this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}forward(t){return t<0||t>=this.weights.length?Array(this.embeddingDim).fill(0):[...this.weights[t]]}backward(t,e){if(!(t<0||t>=this.weights.length))for(let a=0;a<this.embeddingDim;a++){const i=Math.max(-5,Math.min(5,e[a]));this.weights[t][a]+=this.learningRate*i}}}},591:(t,e)=>{function a(t,e=1e-8){const a=t.reduce((t,e)=>t+e,0)/t.length,i=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/t.length,s=Math.sqrt(i+e);return{normalized:t.map(t=>(t-a)/s),mean:a,std:s}}Object.defineProperty(e,"__esModule",{value:!0}),e.LayerNorm=void 0,e.layerNormalize=a,e.batchLayerNormalize=function(t,e=1e-8){return t.map(t=>a(t,e).normalized)},e.LayerNorm=class{epsilon;gamma;beta;dim;learningRate=.001;gradGamma;gradBeta;lastMean=[];lastVar=[];lastStd=[];lastNormalized=[];lastInput=[];constructor(t,e=1e-8){this.dim=t,this.epsilon=e,this.gamma=Array(t).fill(1),this.beta=Array(t).fill(0),this.gradGamma=Array(t).fill(0),this.gradBeta=Array(t).fill(0)}forward(t){const e=t.reduce((t,e)=>t+e,0)/this.dim,a=t.reduce((t,a)=>t+Math.pow(a-e,2),0)/this.dim,i=Math.sqrt(a+this.epsilon);return t.map(t=>(t-e)/i).map((t,e)=>this.gamma[e]*t+this.beta[e])}forwardBatch(t){return this.lastInput=t.map(t=>[...t]),this.lastMean=[],this.lastVar=[],this.lastStd=[],this.lastNormalized=[],t.map((t,e)=>{const a=t.reduce((t,e)=>t+e,0)/this.dim,i=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/this.dim,s=Math.sqrt(i+this.epsilon);this.lastMean[e]=a,this.lastVar[e]=i,this.lastStd[e]=s;const r=t.map(t=>(t-a)/s);return this.lastNormalized[e]=[...r],r.map((t,e)=>this.gamma[e]*t+this.beta[e])})}backward(t,e,a){const i=this.dim,s=(this.lastMean[a],this.lastStd[a]),r=this.lastNormalized[a];for(let t=0;t<i;t++)this.gradGamma[t]+=e[t]*r[t],this.gradBeta[t]+=e[t];const n=e.map((t,e)=>t*this.gamma[e]),o=n.reduce((t,e)=>t+e,0)/i,h=n.reduce((t,e,a)=>t+e*r[a],0)/i;return n.map((t,e)=>(t-o-r[e]*h)/s)}zeroGrad(){this.gradGamma.fill(0),this.gradBeta.fill(0)}updateParameters(){for(let t=0;t<this.dim;t++){const e=Math.max(-5,Math.min(5,this.gradGamma[t])),a=Math.max(-5,Math.min(5,this.gradBeta[t]));this.gamma[t]+=this.learningRate*e,this.beta[t]+=this.learningRate*a}}backwardBatch(t,e){return t.map((t,a)=>this.backward(t,e[a],a))}}},623:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MultiHeadAttention=void 0,e.MultiHeadAttention=class{embeddingDim;numHeads;headDim;wq;wk;wv;wo;gradWq;gradWk;gradWv;gradWo;lastInput=[];lastQ=[];lastK=[];lastV=[];lastScores=[];lastAttentionWeights=[];lastHeadOutputs=[];lastConcatenated=[];learningRate=.001;constructor(t,e=4){if(t%e!==0)throw new Error(`embeddingDim (${t}) must be divisible by numHeads (${e})`);this.embeddingDim=t,this.numHeads=e,this.headDim=t/e;const a=Math.sqrt(1/t);this.wq=this.initHeadWeights(e,t,this.headDim,a),this.wk=this.initHeadWeights(e,t,this.headDim,a),this.wv=this.initHeadWeights(e,t,this.headDim,a),this.wo=this.initWeights(t,t,a),this.gradWq=this.initHeadWeights(e,t,this.headDim,0),this.gradWk=this.initHeadWeights(e,t,this.headDim,0),this.gradWv=this.initHeadWeights(e,t,this.headDim,0),this.gradWo=this.initWeights(t,t,0)}initWeights(t,e,a){return Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}initHeadWeights(t,e,a,i){return Array.from({length:t},()=>this.initWeights(e,a,i))}vecMatmul(t,e){const a=new Array(e[0].length).fill(0);for(let i=0;i<e[0].length;i++)for(let s=0;s<t.length;s++)a[i]+=t[s]*e[s][i];return a}softmax(t){return t.map(t=>{const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),i=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/i)})}softmaxBackward(t,e){const a=[];for(let i=0;i<t.length;i++){const s=e[i],r=t[i],n=r.reduce((t,e,a)=>t+e*s[a],0);a[i]=s.map((t,e)=>t*(r[e]-n))}return a}forward(t){this.lastInput=t.map(t=>[...t]);const e=t.length;this.lastQ=[],this.lastK=[],this.lastV=[],this.lastScores=[],this.lastAttentionWeights=[],this.lastHeadOutputs=[];const a=[];for(let i=0;i<this.numHeads;i++){const s=t.map(t=>this.vecMatmul(t,this.wq[i])),r=t.map(t=>this.vecMatmul(t,this.wk[i])),n=t.map(t=>this.vecMatmul(t,this.wv[i]));this.lastQ[i]=s,this.lastK[i]=r,this.lastV[i]=n;const o=Math.sqrt(this.headDim),h=[];for(let t=0;t<e;t++){h[t]=[];for(let a=0;a<e;a++){let e=0;for(let i=0;i<this.headDim;i++)e+=s[t][i]*r[a][i];h[t][a]=e/o}}this.lastScores[i]=h;const l=this.softmax(h);this.lastAttentionWeights[i]=l;const d=[];for(let t=0;t<e;t++){d[t]=new Array(this.headDim).fill(0);for(let a=0;a<e;a++)for(let e=0;e<this.headDim;e++)d[t][e]+=l[t][a]*n[a][e]}this.lastHeadOutputs[i]=d,a[i]=d}const i=[];for(let t=0;t<e;t++){i[t]=[];for(let e=0;e<this.numHeads;e++)for(let s=0;s<this.headDim;s++)i[t].push(a[e][t][s])}return this.lastConcatenated=i,i.map(t=>this.vecMatmul(t,this.wo))}backward(t){const e=t.length,a=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let i=0;i<e;i++)for(let e=0;e<this.embeddingDim;e++){const s=t[i][e];for(let t=0;t<this.embeddingDim;t++)this.gradWo[t][e]+=s*this.lastConcatenated[i][t],a[i][t]+=s*this.wo[t][e]}const i=[];for(let t=0;t<this.numHeads;t++){i[t]=[];for(let s=0;s<e;s++){i[t][s]=[];for(let e=0;e<this.headDim;e++){const r=t*this.headDim+e;i[t][s][e]=a[s][r]}}}const s=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<this.numHeads;t++){const a=this.lastQ[t],r=this.lastK[t],n=this.lastV[t],o=this.lastAttentionWeights[t],h=i[t],l=Array.from({length:e},()=>new Array(e).fill(0)),d=Array.from({length:e},()=>new Array(this.headDim).fill(0));for(let t=0;t<e;t++)for(let a=0;a<this.headDim;a++){const i=h[t][a];for(let s=0;s<e;s++)l[t][s]+=i*n[s][a],d[s][a]+=i*o[t][s]}const m=this.softmaxBackward(l,o),c=Math.sqrt(this.headDim),g=m.map(t=>t.map(t=>t/c)),u=Array.from({length:e},()=>new Array(this.headDim).fill(0)),f=Array.from({length:e},()=>new Array(this.headDim).fill(0));for(let t=0;t<e;t++)for(let i=0;i<e;i++){const e=g[t][i];for(let s=0;s<this.headDim;s++)u[t][s]+=e*r[i][s],f[i][s]+=e*a[t][s]}for(let a=0;a<e;a++)for(let e=0;e<this.headDim;e++){const i=u[a][e],r=f[a][e],n=d[a][e];for(let o=0;o<this.embeddingDim;o++)this.gradWq[t][o][e]+=i*this.lastInput[a][o],this.gradWk[t][o][e]+=r*this.lastInput[a][o],this.gradWv[t][o][e]+=n*this.lastInput[a][o],s[a][o]+=i*this.wq[t][o][e],s[a][o]+=r*this.wk[t][o][e],s[a][o]+=n*this.wv[t][o][e]}}return s}zeroGrad(){for(let t=0;t<this.numHeads;t++)for(let e=0;e<this.embeddingDim;e++)for(let a=0;a<this.headDim;a++)this.gradWq[t][e][a]=0,this.gradWk[t][e][a]=0,this.gradWv[t][e][a]=0;for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++)this.gradWo[t][e]=0}updateParameters(){for(let t=0;t<this.numHeads;t++)for(let e=0;e<this.embeddingDim;e++)for(let a=0;a<this.headDim;a++){const i=Math.max(-5,Math.min(5,this.gradWq[t][e][a]));this.wq[t][e][a]+=this.learningRate*i;const s=Math.max(-5,Math.min(5,this.gradWk[t][e][a]));this.wk[t][e][a]+=this.learningRate*s;const r=Math.max(-5,Math.min(5,this.gradWv[t][e][a]));this.wv[t][e][a]+=this.learningRate*r}for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++){const a=Math.max(-5,Math.min(5,this.gradWo[t][e]));this.wo[t][e]+=this.learningRate*a}}}},673:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MultiHeadTransformer=e.SimpleTransformer=void 0;const i=a(591),s=a(623);e.SimpleTransformer=class{wq;wk;wv;w1;w2;gradWq;gradWk;gradWv;gradW1;gradW2;layerNorm1;layerNorm2;learningRate=.001;embeddingDim;lastInput=[];lastQ=[];lastK=[];lastV=[];lastScores=[];lastAttentionWeights=[];lastAttnOutput=[];lastAttnResidual=[];lastAttnNorm=[];lastFF1=[];lastFFOutput=[];lastFFResidual=[];constructor(t){this.embeddingDim=t;const e=Math.sqrt(1/t);this.wq=this.initWeights(t,t,e),this.wk=this.initWeights(t,t,e),this.wv=this.initWeights(t,t,e),this.w1=this.initWeights(t,t,e),this.w2=this.initWeights(t,t,e),this.gradWq=this.initWeights(t,t,0),this.gradWk=this.initWeights(t,t,0),this.gradWv=this.initWeights(t,t,0),this.gradW1=this.initWeights(t,t,0),this.gradW2=this.initWeights(t,t,0),this.layerNorm1=new i.LayerNorm(t),this.layerNorm2=new i.LayerNorm(t)}initWeights(t,e,a){return Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}matmul(t,e){const a=[];for(let i=0;i<t.length;i++){a[i]=[];for(let s=0;s<e[0].length;s++){let r=0;for(let a=0;a<t[0].length;a++)r+=t[i][a]*e[a][s];a[i][s]=r}}return a}vecMatmul(t,e){const a=new Array(e[0].length).fill(0);for(let i=0;i<e[0].length;i++)for(let s=0;s<t.length;s++)a[i]+=t[s]*e[s][i];return a}transpose(t){const e=t.length,a=t[0].length,i=Array.from({length:a},()=>new Array(e));for(let s=0;s<e;s++)for(let e=0;e<a;e++)i[e][s]=t[s][e];return i}softmax(t){return t.map(t=>{const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),i=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/i)})}softmaxBackward(t,e){const a=[];for(let i=0;i<t.length;i++){const s=e[i],r=t[i],n=r.reduce((t,e,a)=>t+e*s[a],0);a[i]=s.map((t,e)=>t*(r[e]-n))}return a}attention(t){const e=t.length,a=Math.sqrt(this.embeddingDim);this.lastQ=t.map(t=>this.vecMatmul(t,this.wq)),this.lastK=t.map(t=>this.vecMatmul(t,this.wk)),this.lastV=t.map(t=>this.vecMatmul(t,this.wv)),this.lastScores=[];for(let t=0;t<e;t++){this.lastScores[t]=[];for(let i=0;i<e;i++){let e=0;for(let a=0;a<this.embeddingDim;a++)e+=this.lastQ[t][a]*this.lastK[i][a];this.lastScores[t][i]=e/a}}this.lastAttentionWeights=this.softmax(this.lastScores);const i=[];for(let t=0;t<e;t++){i[t]=new Array(this.embeddingDim).fill(0);for(let a=0;a<e;a++)for(let e=0;e<this.embeddingDim;e++)i[t][e]+=this.lastAttentionWeights[t][a]*this.lastV[a][e]}return i}feedForward(t){return this.lastFF1=t.map(t=>this.vecMatmul(t,this.w1).map(t=>Math.max(0,t))),this.lastFF1.map(t=>this.vecMatmul(t,this.w2))}forward(t){return this.lastInput=t.map(t=>[...t]),this.lastAttnOutput=this.attention(t),this.lastAttnResidual=this.lastAttnOutput.map((e,a)=>e.map((e,i)=>e+t[a][i])),this.lastAttnNorm=this.layerNorm1.forwardBatch(this.lastAttnResidual),this.lastFFOutput=this.feedForward(this.lastAttnNorm),this.lastFFResidual=this.lastFFOutput.map((t,e)=>t.map((t,a)=>t+this.lastAttnNorm[e][a])),this.layerNorm2.forwardBatch(this.lastFFResidual)}backward(t){const e=t.length,a=Math.sqrt(this.embeddingDim);let i=this.layerNorm2.backwardBatch(this.lastFFResidual,t);const s=i.map(t=>[...t]),r=i.map(t=>[...t]),n=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=s[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradW2[i][e]+=a*this.lastFF1[t][i],n[t][i]+=a*this.w2[i][e]}const o=n.map((t,e)=>t.map((t,a)=>this.lastFF1[e][a]>0?t:0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=o[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradW1[i][e]+=a*this.lastAttnNorm[t][i],r[t][i]+=a*this.w1[i][e]}const h=this.layerNorm1.backwardBatch(this.lastAttnResidual,r),l=h.map(t=>[...t]),d=h.map(t=>[...t]),m=Array.from({length:e},()=>new Array(e).fill(0)),c=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let a=0;a<this.embeddingDim;a++){const i=l[t][a];for(let s=0;s<e;s++)m[t][s]+=i*this.lastV[s][a],c[s][a]+=i*this.lastAttentionWeights[t][s]}const g=this.softmaxBackward(m,this.lastAttentionWeights).map(t=>t.map(t=>t/a)),u=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0)),f=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let a=0;a<e;a++){const e=g[t][a];for(let i=0;i<this.embeddingDim;i++)u[t][i]+=e*this.lastK[a][i],f[a][i]+=e*this.lastQ[t][i]}const p=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=u[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradWq[i][e]+=a*this.lastInput[t][i],p[t][i]+=a*this.wq[i][e]}for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=f[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradWk[i][e]+=a*this.lastInput[t][i],p[t][i]+=a*this.wk[i][e]}for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=c[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradWv[i][e]+=a*this.lastInput[t][i],p[t][i]+=a*this.wv[i][e]}return d.map((t,e)=>t.map((t,a)=>t+p[e][a]))}zeroGrad(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++)this.gradWq[t][e]=0,this.gradWk[t][e]=0,this.gradWv[t][e]=0,this.gradW1[t][e]=0,this.gradW2[t][e]=0}updateParameters(){for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++){const a=Math.max(-5,Math.min(5,this.gradWq[t][e]));this.wq[t][e]+=this.learningRate*a;const i=Math.max(-5,Math.min(5,this.gradWk[t][e]));this.wk[t][e]+=this.learningRate*i;const s=Math.max(-5,Math.min(5,this.gradWv[t][e]));this.wv[t][e]+=this.learningRate*s;const r=Math.max(-5,Math.min(5,this.gradW1[t][e]));this.w1[t][e]+=this.learningRate*r;const n=Math.max(-5,Math.min(5,this.gradW2[t][e]));this.w2[t][e]+=this.learningRate*n}}},e.MultiHeadTransformer=class{multiHeadAttention;w1;w2;gradW1;gradW2;layerNorm1;layerNorm2;learningRate=.001;embeddingDim;numHeads;lastInput=[];lastAttnOutput=[];lastAttnResidual=[];lastAttnNorm=[];lastFF1=[];lastFFOutput=[];lastFFResidual=[];constructor(t,e=4){this.embeddingDim=t,this.numHeads=e,this.multiHeadAttention=new s.MultiHeadAttention(t,e);const a=Math.sqrt(1/t);this.w1=this.initWeights(t,t,a),this.w2=this.initWeights(t,t,a),this.gradW1=this.initWeights(t,t,0),this.gradW2=this.initWeights(t,t,0),this.layerNorm1=new i.LayerNorm(t),this.layerNorm2=new i.LayerNorm(t)}initWeights(t,e,a){return Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}vecMatmul(t,e){const a=new Array(e[0].length).fill(0);for(let i=0;i<e[0].length;i++)for(let s=0;s<t.length;s++)a[i]+=t[s]*e[s][i];return a}feedForward(t){return this.lastFF1=t.map(t=>this.vecMatmul(t,this.w1).map(t=>Math.max(0,t))),this.lastFF1.map(t=>this.vecMatmul(t,this.w2))}forward(t){return this.lastInput=t.map(t=>[...t]),this.lastAttnOutput=this.multiHeadAttention.forward(t),this.lastAttnResidual=this.lastAttnOutput.map((e,a)=>e.map((e,i)=>e+t[a][i])),this.lastAttnNorm=this.layerNorm1.forwardBatch(this.lastAttnResidual),this.lastFFOutput=this.feedForward(this.lastAttnNorm),this.lastFFResidual=this.lastFFOutput.map((t,e)=>t.map((t,a)=>t+this.lastAttnNorm[e][a])),this.layerNorm2.forwardBatch(this.lastFFResidual)}backward(t){const e=t.length;let a=this.layerNorm2.backwardBatch(this.lastFFResidual,t);const i=a.map(t=>[...t]),s=a.map(t=>[...t]),r=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=i[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradW2[i][e]+=a*this.lastFF1[t][i],r[t][i]+=a*this.w2[i][e]}const n=r.map((t,e)=>t.map((t,a)=>this.lastFF1[e][a]>0?t:0));for(let t=0;t<e;t++)for(let e=0;e<this.embeddingDim;e++){const a=n[t][e];for(let i=0;i<this.embeddingDim;i++)this.gradW1[i][e]+=a*this.lastAttnNorm[t][i],s[t][i]+=a*this.w1[i][e]}const o=this.layerNorm1.backwardBatch(this.lastAttnResidual,s),h=o.map(t=>[...t]),l=o.map(t=>[...t]),d=this.multiHeadAttention.backward(h);return l.map((t,e)=>t.map((t,a)=>t+d[e][a]))}zeroGrad(){this.multiHeadAttention.zeroGrad();for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++)this.gradW1[t][e]=0,this.gradW2[t][e]=0}updateParameters(){this.multiHeadAttention.updateParameters();for(let t=0;t<this.embeddingDim;t++)for(let e=0;e<this.embeddingDim;e++){const a=Math.max(-5,Math.min(5,this.gradW1[t][e]));this.w1[t][e]+=this.learningRate*a;const i=Math.max(-5,Math.min(5,this.gradW2[t][e]));this.w2[t][e]+=this.learningRate*i}}}},685:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleLLM=void 0;const i=a(211),s=a(673),r=a(499),n=a(179),o=a(893);class h{tokenizer;embedding;transformers;outputLayer;positionalEncoding;vocabSize;embeddingDim;numLayers;numHeads;constructor(t,e=16,a=2,h=1){this.vocabSize=t.length,this.embeddingDim=e,this.numLayers=a,this.numHeads=h,this.tokenizer=new i.SimpleTokenizer(t),this.embedding=new r.EmbeddingLayer(t.length,e),this.transformers=Array.from({length:a},()=>h>1?new s.MultiHeadTransformer(e,h):new s.SimpleTransformer(e)),this.outputLayer=new n.OutputLayer(e,t.length),this.positionalEncoding=new o.PositionalEncodingCache(e)}getSpecialTokenIndices(){const t=new Set;return["[PAD]","[UNK]","[EOS]"].forEach(e=>{const a=this.tokenizer.vocabMap[e];void 0!==a&&t.add(a)}),t}predict(t,e=10){let a=this.tokenizer.encode(t);const i=this.getSpecialTokenIndices(),s=this.tokenizer.vocabMap["[EOS]"];console.log("Input text:",t),console.log("Encoded tokens:",a),console.log("Special token indices:",Array.from(i)),console.log("Vocab size:",this.vocabSize);for(let t=0;t<e;t++){const e=a.map(t=>this.embedding.forward(t));let r=this.positionalEncoding.addToEmbeddings(e);for(const t of this.transformers)r=t.forward(r);const n=r[r.length-1],o=this.outputLayer.forward(n),h=this.outputLayer.softmax(o),l=h.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);console.log(`Step ${t} - Top 5 probs (before filter):`,l);const d=h.map((t,e)=>i.has(e)?0:t),m=d.reduce((t,e)=>t+e,1e-10),c=d.map(t=>t/m),g=Math.max(...c),u=c.indexOf(g);console.log(`Step ${t}: nextToken=${u}, maxProb=${g.toFixed(4)}, word="${this.tokenizer.vocab[u]}"`);const f=c.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);if(console.log(`Step ${t} - Top 5 probs (after filter):`,f),a.push(u),u===s)break}const r=this.tokenizer.decode(a);return console.log("Final result:",r),r}train(t,e=10){for(let a=0;a<e;a++){console.log(`Epoch ${a+1}/${e}`);let i=0;t.forEach(({input:t,target:e})=>{for(const t of this.transformers)t.zeroGrad(),t.layerNorm1.zeroGrad(),t.layerNorm2.zeroGrad();this.outputLayer.zeroGrad();const a=this.tokenizer.encode(t),s=this.tokenizer.encode(e),r=a.map(t=>this.embedding.forward(t));let n=this.positionalEncoding.addToEmbeddings(r);for(const t of this.transformers)n=t.forward(n);const o=n,h=Math.min(o.length,s.length),l=Array.from({length:o.length},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<h;t++){const e=this.outputLayer.forward(o[t]),a=this.outputLayer.softmax(e),r=a.map(t=>-t);r[s[t]]+=1,i-=Math.log(a[s[t]]+1e-10);const n=this.outputLayer.backward(o[t],r);for(let e=0;e<this.embeddingDim;e++)l[t][e]=n[e]}let d=l;for(let t=this.transformers.length-1;t>=0;t--)d=this.transformers[t].backward(d);const m=d;for(let t=0;t<a.length&&t<m.length;t++)this.embedding.backward(a[t],m[t]);this.outputLayer.updateParameters();for(const t of this.transformers)t.updateParameters(),t.layerNorm1.updateParameters(),t.layerNorm2.updateParameters()});const s=i/t.length;console.log(`Epoch ${a+1}/${e} - Loss: ${s.toFixed(4)}`)}}serialize(){return{version:"2.0",config:{vocabSize:this.vocabSize,embeddingDim:this.embeddingDim,numLayers:this.numLayers,numHeads:this.numHeads,vocab:this.tokenizer.vocab},weights:{embedding:this.embedding.weights,transformers:this.transformers.map(t=>t instanceof s.MultiHeadTransformer?{type:"multi-head",multiHeadAttention:{wq:t.multiHeadAttention.wq,wk:t.multiHeadAttention.wk,wv:t.multiHeadAttention.wv,wo:t.multiHeadAttention.wo},w1:t.w1,w2:t.w2,layerNorm1:{gamma:t.layerNorm1.gamma,beta:t.layerNorm1.beta},layerNorm2:{gamma:t.layerNorm2.gamma,beta:t.layerNorm2.beta}}:{type:"single-head",wq:t.wq,wk:t.wk,wv:t.wv,w1:t.w1,w2:t.w2,layerNorm1:{gamma:t.layerNorm1.gamma,beta:t.layerNorm1.beta},layerNorm2:{gamma:t.layerNorm2.gamma,beta:t.layerNorm2.beta}}),output:{weights:this.outputLayer.weights,bias:this.outputLayer.bias}}}}static deserialize(t){const{config:e,weights:a,version:i}=t,r=e.numHeads||1,n=new h(e.vocab,e.embeddingDim,e.numLayers,r);return n.embedding.weights=a.embedding,a.transformers.forEach((t,e)=>{const a=n.transformers[e];"multi-head"===t.type&&a instanceof s.MultiHeadTransformer?(a.multiHeadAttention.wq=t.multiHeadAttention.wq,a.multiHeadAttention.wk=t.multiHeadAttention.wk,a.multiHeadAttention.wv=t.multiHeadAttention.wv,a.multiHeadAttention.wo=t.multiHeadAttention.wo,a.w1=t.w1,a.w2=t.w2,a.layerNorm1.gamma=t.layerNorm1.gamma,a.layerNorm1.beta=t.layerNorm1.beta,a.layerNorm2.gamma=t.layerNorm2.gamma,a.layerNorm2.beta=t.layerNorm2.beta):a instanceof s.SimpleTransformer&&(a.wq=t.wq,a.wk=t.wk,a.wv=t.wv,a.w1=t.w1,a.w2=t.w2,a.layerNorm1.gamma=t.layerNorm1.gamma,a.layerNorm1.beta=t.layerNorm1.beta,a.layerNorm2.gamma=t.layerNorm2.gamma,a.layerNorm2.beta=t.layerNorm2.beta)}),n.outputLayer.weights=a.output.weights,n.outputLayer.bias=a.output.bias,n}}e.SimpleLLM=h},893:(t,e)=>{function a(t,e){const a=new Array(e);for(let i=0;i<e;i++){const s=t/Math.pow(1e4,2*Math.floor(i/2)/e);a[i]=i%2==0?Math.sin(s):Math.cos(s)}return a}Object.defineProperty(e,"__esModule",{value:!0}),e.PositionalEncodingCache=void 0,e.getPositionalEncoding=a,e.addPositionalEncoding=function(t,e){return t.map((t,i)=>{const s=a(i,e);return t.map((t,e)=>t+s[e])})},e.PositionalEncodingCache=class{cache=new Map;embeddingDim;constructor(t){this.embeddingDim=t}get(t){const e=`${t}`;if(!this.cache.has(e)){const i=a(t,this.embeddingDim);this.cache.set(e,i)}return this.cache.get(e)}addToEmbedding(t,e){const a=this.get(e);return t.map((t,e)=>t+a[e])}addToEmbeddings(t){return t.map((t,e)=>this.addToEmbedding(t,e))}}}},e={};function a(i){var s=e[i];if(void 0!==s)return s.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,a),r.exports}(()=>{const t=a(685);let e,i=!1;async function s(a="default-latest"){const s=document.getElementById("status"),r=document.getElementById("output"),n=document.getElementById("predict-button"),o=document.getElementById("user-input");console.log("loadModel called with:",a),s.textContent=`Loading model from repository: ${a}...`,r.innerHTML="";const h=await async function(t="default-latest"){try{const e=await fetch(`./models/${t}.json`);if(!e.ok)return console.warn(`Model file not found: models/${t}.json`),null;const a=await e.json();return console.log("Model loaded from repository:",t),a}catch(t){return console.error("Error loading model from repo:",t),null}}(a);if(console.log("Model data loaded:",h?"success":"failed"),h)try{e=t.SimpleLLM.deserialize(h),i=!0,n.disabled=!1,o.disabled=!1;const a=document.createElement("div");if(a.className="message success",a.textContent="✓ Model loaded successfully! You can start chatting now.",r.appendChild(a),h.metadata){const t=document.createElement("div");t.className="message",t.innerHTML=`\n          <strong>Model Info:</strong><br>\n          - Name: ${h.metadata.name||"N/A"}<br>\n          - Training samples: ${h.metadata.trainingSamples||"N/A"}<br>\n          - Vocab size: ${h.config.vocabSize||"N/A"}<br>\n          - Created: ${h.metadata.createdAt?new Date(h.metadata.createdAt).toLocaleString():"N/A"}\n        `,r.appendChild(t)}s.textContent="Model ready! Start chatting below."}catch(t){console.error("Error deserializing model:",t);const e=document.createElement("div");e.className="message error",e.textContent="✗ Failed to load model. Please check the console for details.",r.appendChild(e),s.textContent="Failed to load model"}else{const t=document.createElement("div");t.className="message error",t.textContent="✗ Model file not found. Please ensure default-latest.json exists in the models directory.",r.appendChild(t),s.textContent="Model not found"}}async function r(){await s();const t=document.getElementById("predict-button"),a=document.getElementById("user-input"),r=document.getElementById("output"),n=document.getElementById("model-select"),o=document.getElementById("load-model-button");t.addEventListener("click",()=>{const t=a.value.trim();if(t)if(i)try{const i=e.predict(t,10),s=document.createElement("div");s.className="message user-message",s.textContent=`You: ${t}`,r.appendChild(s);const n=document.createElement("div");n.className="message ai-message",n.textContent=`AI: ${i}`,r.appendChild(n),r.scrollTop=r.scrollHeight,a.value=""}catch(t){const e=document.createElement("div");e.className="message error",e.textContent=`Error: ${t}`,r.appendChild(e),console.error(t)}else alert("Model is not ready yet. Please wait for it to load.");else alert("Please enter some text")}),a.addEventListener("keypress",e=>{"Enter"===e.key&&t.click()}),o.addEventListener("click",async()=>{const e=n.value;console.log("Loading model:",e),t.disabled=!0,a.disabled=!0,o.disabled=!0,await s(e),o.disabled=!1}),console.log("Model selection initialized. Available models:",Array.from(n.options).map(t=>t.value))}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",r):r()})()})();