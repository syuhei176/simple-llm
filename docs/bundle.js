(()=>{"use strict";var t={49:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OutputLayer=void 0,e.OutputLayer=class{weights;bias;learningRate=.01;vocabSize;embeddingDim;constructor(t,e){this.embeddingDim=t,this.vocabSize=e;const a=Math.sqrt(2/(t+e));this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a)),this.bias=Array.from({length:e},()=>0)}forward(t){const e=new Array(this.vocabSize).fill(0);for(let a=0;a<this.vocabSize;a++){let i=this.bias[a];for(let e=0;e<this.embeddingDim;e++)i+=t[e]*this.weights[e][a];e[a]=i}return e}softmax(t){const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),i=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/i)}backward(t,e){const a=new Array(this.embeddingDim).fill(0);for(let i=0;i<this.embeddingDim;i++)for(let n=0;n<this.vocabSize;n++)this.weights[i][n]+=this.learningRate*e[n]*t[i],a[i]+=e[n]*this.weights[i][n];for(let t=0;t<this.vocabSize;t++)this.bias[t]+=this.learningRate*e[t];return a}}},77:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EmbeddingLayer=void 0,e.EmbeddingLayer=class{weights;embeddingDim;learningRate=.01;constructor(t,e){this.embeddingDim=e;const a=Math.sqrt(2/e);this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}forward(t){return t<0||t>=this.weights.length?Array(this.embeddingDim).fill(0):[...this.weights[t]]}backward(t,e){if(!(t<0||t>=this.weights.length))for(let a=0;a<this.embeddingDim;a++)this.weights[t][a]+=this.learningRate*e[a]}}},219:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleLLM=void 0;const i=a(405),n=a(363),r=a(77),o=a(49),s=a(383);e.SimpleLLM=class{tokenizer;embedding;transformers;outputLayer;positionalEncoding;vocabSize;embeddingDim;numLayers;constructor(t,e=16,a=2){this.vocabSize=t.length,this.embeddingDim=e,this.numLayers=a,this.tokenizer=new i.SimpleTokenizer(t),this.embedding=new r.EmbeddingLayer(t.length,e),this.transformers=Array.from({length:a},()=>new n.SimpleTransformer(e)),this.outputLayer=new o.OutputLayer(e,t.length),this.positionalEncoding=new s.PositionalEncodingCache(e)}getSpecialTokenIndices(){const t=new Set;return["[PAD]","[UNK]","[EOS]"].forEach(e=>{const a=this.tokenizer.vocabMap[e];void 0!==a&&t.add(a)}),t}predict(t,e=10){let a=this.tokenizer.encode(t);const i=this.getSpecialTokenIndices(),n=this.tokenizer.vocabMap["[EOS]"];console.log("Input text:",t),console.log("Encoded tokens:",a),console.log("Special token indices:",Array.from(i)),console.log("Vocab size:",this.vocabSize);for(let t=0;t<e;t++){const e=a.map(t=>this.embedding.forward(t));let r=this.positionalEncoding.addToEmbeddings(e);for(const t of this.transformers)r=t.forward(r);const o=r[r.length-1],s=this.outputLayer.forward(o),l=this.outputLayer.softmax(s),h=l.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);console.log(`Step ${t} - Top 5 probs (before filter):`,h);const d=l.map((t,e)=>i.has(e)?0:t),c=d.reduce((t,e)=>t+e,1e-10),u=d.map(t=>t/c),g=Math.max(...u),m=u.indexOf(g);console.log(`Step ${t}: nextToken=${m}, maxProb=${g.toFixed(4)}, word="${this.tokenizer.vocab[m]}"`);const p=u.map((t,e)=>({prob:t,idx:e,word:this.tokenizer.vocab[e]})).sort((t,e)=>e.prob-t.prob).slice(0,5);if(console.log(`Step ${t} - Top 5 probs (after filter):`,p),a.push(m),m===n)break}const r=this.tokenizer.decode(a);return console.log("Final result:",r),r}train(t,e=10){for(let a=0;a<e;a++){let i=0;t.forEach(({input:t,target:e})=>{const a=this.tokenizer.encode(t),n=this.tokenizer.encode(e),r=a.map(t=>this.embedding.forward(t));let o=this.positionalEncoding.addToEmbeddings(r);for(const t of this.transformers)o=t.forward(o);const s=o,l=Math.min(s.length,n.length),h=Array.from({length:s.length},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<l;t++){const e=this.outputLayer.forward(s[t]),a=this.outputLayer.softmax(e),r=[...a];r[n[t]]-=1,i-=Math.log(a[n[t]]+1e-10);const o=this.outputLayer.backward(s[t],r);for(let e=0;e<this.embeddingDim;e++)h[t][e]=o[e]}let d=h;for(let t=this.transformers.length-1;t>=0;t--)d=this.transformers[t].backward(d);const c=d;for(let t=0;t<a.length&&t<c.length;t++)this.embedding.backward(a[t],c[t])});const n=i/t.length;console.log(`Epoch ${a+1}/${e} - Loss: ${n.toFixed(4)}`)}}}},363:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTransformer=void 0;const i=a(489);e.SimpleTransformer=class{wq;wk;wv;w1;w2;layerNorm1;layerNorm2;learningRate=.01;embeddingDim;lastInput=[];lastQ=[];lastK=[];lastV=[];lastAttention=[];lastAttnOutput=[];constructor(t){this.embeddingDim=t;const e=Math.sqrt(2/t);this.wq=this.initWeights(t,t,e),this.wk=this.initWeights(t,t,e),this.wv=this.initWeights(t,t,e),this.w1=this.initWeights(t,t,e),this.w2=this.initWeights(t,t,e),this.layerNorm1=new i.LayerNorm(t),this.layerNorm2=new i.LayerNorm(t)}initWeights(t,e,a){return Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*a))}matmul(t,e){const a=[];for(let i=0;i<t.length;i++){a[i]=[];for(let n=0;n<e[0].length;n++){let r=0;for(let a=0;a<t[0].length;a++)r+=t[i][a]*e[a][n];a[i][n]=r}}return a}vecMatmul(t,e){const a=new Array(e[0].length).fill(0);for(let i=0;i<e[0].length;i++)for(let n=0;n<t.length;n++)a[i]+=t[n]*e[n][i];return a}softmax(t){return t.map(t=>{const e=Math.max(...t),a=t.map(t=>Math.exp(t-e)),i=a.reduce((t,e)=>t+e,1e-8);return a.map(t=>t/i)})}attention(t){const e=t.length,a=Math.sqrt(this.embeddingDim);this.lastQ=t.map(t=>this.vecMatmul(t,this.wq)),this.lastK=t.map(t=>this.vecMatmul(t,this.wk)),this.lastV=t.map(t=>this.vecMatmul(t,this.wv));const i=[];for(let t=0;t<e;t++){i[t]=[];for(let n=0;n<e;n++){let e=0;for(let a=0;a<this.embeddingDim;a++)e+=this.lastQ[t][a]*this.lastK[n][a];i[t][n]=e/a}}this.lastAttention=this.softmax(i);const n=[];for(let t=0;t<e;t++){n[t]=new Array(this.embeddingDim).fill(0);for(let a=0;a<e;a++)for(let e=0;e<this.embeddingDim;e++)n[t][e]+=this.lastAttention[t][a]*this.lastV[a][e]}return n}feedForward(t){return t.map(t=>this.vecMatmul(t,this.w1).map(t=>Math.max(0,t))).map(t=>this.vecMatmul(t,this.w2))}forward(t){this.lastInput=t.map(t=>[...t]),this.lastAttnOutput=this.attention(t);const e=this.lastAttnOutput.map((e,a)=>e.map((e,i)=>e+t[a][i])),a=this.layerNorm1.forwardBatch(e),i=this.feedForward(a).map((t,e)=>t.map((t,i)=>t+a[e][i]));return this.layerNorm2.forwardBatch(i)}backward(t){const e=t.length,a=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let i=0;i<e;i++)for(let e=0;e<this.embeddingDim;e++){const n=t[i][e];for(let t=0;t<this.embeddingDim;t++)this.wq[t][e]+=this.learningRate*n*this.lastInput[i][t]*.1,this.wk[t][e]+=this.learningRate*n*this.lastInput[i][t]*.1,this.wv[t][e]+=this.learningRate*n*this.lastInput[i][t]*.1,a[i][t]+=n*(this.wq[t][e]+this.wk[t][e]+this.wv[t][e])*.33}return a}}},383:(t,e)=>{function a(t,e){const a=new Array(e);for(let i=0;i<e;i++){const n=t/Math.pow(1e4,2*Math.floor(i/2)/e);a[i]=i%2==0?Math.sin(n):Math.cos(n)}return a}Object.defineProperty(e,"__esModule",{value:!0}),e.PositionalEncodingCache=void 0,e.getPositionalEncoding=a,e.addPositionalEncoding=function(t,e){return t.map((t,i)=>{const n=a(i,e);return t.map((t,e)=>t+n[e])})},e.PositionalEncodingCache=class{cache=new Map;embeddingDim;constructor(t){this.embeddingDim=t}get(t){const e=`${t}`;if(!this.cache.has(e)){const i=a(t,this.embeddingDim);this.cache.set(e,i)}return this.cache.get(e)}addToEmbedding(t,e){const a=this.get(e);return t.map((t,e)=>t+a[e])}addToEmbeddings(t){return t.map((t,e)=>this.addToEmbedding(t,e))}}},405:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTokenizer=void 0,e.SimpleTokenizer=class{vocab;vocabMap;unkIndex;constructor(t){this.vocab=t,this.vocabMap=Object.fromEntries(t.map((t,e)=>[t,e])),this.unkIndex=this.vocabMap["[UNK]"]??0}encode(t){return t.toLowerCase().split(" ").map(t=>t.trim()).filter(t=>t.length>0).map(t=>this.vocabMap[t]??this.unkIndex)}decode(t){return t.map(t=>this.vocab[t]??"[UNK]").join(" ")}}},489:(t,e)=>{function a(t,e=1e-8){const a=t.reduce((t,e)=>t+e,0)/t.length,i=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/t.length,n=Math.sqrt(i+e);return{normalized:t.map(t=>(t-a)/n),mean:a,std:n}}Object.defineProperty(e,"__esModule",{value:!0}),e.LayerNorm=void 0,e.layerNormalize=a,e.batchLayerNormalize=function(t,e=1e-8){return t.map(t=>a(t,e).normalized)},e.LayerNorm=class{epsilon;gamma;beta;dim;learningRate=.01;constructor(t,e=1e-8){this.dim=t,this.epsilon=e,this.gamma=Array(t).fill(1),this.beta=Array(t).fill(0)}forward(t){const e=t.reduce((t,e)=>t+e,0)/this.dim,a=t.reduce((t,a)=>t+Math.pow(a-e,2),0)/this.dim,i=Math.sqrt(a+this.epsilon);return t.map((t,a)=>{const n=(t-e)/i;return this.gamma[a]*n+this.beta[a]})}forwardBatch(t){return t.map(t=>this.forward(t))}backward(t,e){const a=t.reduce((t,e)=>t+e,0)/this.dim,i=t.reduce((t,e)=>t+Math.pow(e-a,2),0)/this.dim,n=Math.sqrt(i+this.epsilon);for(let i=0;i<this.dim;i++){const r=(t[i]-a)/n,o=e[i]*r,s=e[i];this.gamma[i]+=this.learningRate*o,this.beta[i]+=this.learningRate*s}return e.map((t,e)=>t*this.gamma[e]/n)}backwardBatch(t,e){return t.map((t,a)=>this.backward(t,e[a]))}}},766:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.trainingData=void 0,e.createVocab=function(t){const e=["[PAD]","[UNK]","[EOS]"],a=new Set(e);return t.forEach(t=>{t.input.toLowerCase().split(" ").forEach(t=>{const i=t.trim();i&&!a.has(i)&&(e.push(i),a.add(i))}),t.target.toLowerCase().split(" ").forEach(t=>{const i=t.trim();i&&!a.has(i)&&(e.push(i),a.add(i))})}),console.log("Vocabulary created. First 10 words:",e.slice(0,10)),console.log("[PAD] index:",e.indexOf("[PAD]")),console.log("[UNK] index:",e.indexOf("[UNK]")),console.log("[EOS] index:",e.indexOf("[EOS]")),e},e.trainingData=[{input:"hello",target:"hi there"},{input:"hi",target:"hello friend"},{input:"hey",target:"hey how are you"},{input:"good morning",target:"good morning to you"},{input:"good afternoon",target:"good afternoon friend"},{input:"good evening",target:"good evening"},{input:"goodbye",target:"see you later"},{input:"bye",target:"goodbye friend"},{input:"how are you",target:"I am doing well thank you"},{input:"what is your name",target:"I am a simple AI assistant"},{input:"who are you",target:"I am an AI chatbot"},{input:"where are you from",target:"I exist in the digital world"},{input:"what can you do",target:"I can chat and answer questions"},{input:"how old are you",target:"I was just created recently"},{input:"thank you",target:"you are welcome"},{input:"thanks",target:"my pleasure to help"},{input:"sorry",target:"no problem at all"},{input:"excuse me",target:"yes how can I help"},{input:"how is the weather",target:"I hope it is nice today"},{input:"is it sunny",target:"I cannot see outside but I hope so"},{input:"is it raining",target:"I am not sure about the weather"},{input:"what colors do you know",target:"red blue green yellow orange purple"},{input:"colors",target:"red blue green yellow orange purple pink"},{input:"primary colors",target:"red blue yellow"},{input:"favorite color",target:"I like blue and green"},{input:"what animals do you know",target:"cat dog bird fish elephant lion"},{input:"animals",target:"cat dog bird fish elephant tiger bear"},{input:"pets",target:"cat dog fish bird hamster"},{input:"wild animals",target:"lion tiger elephant bear wolf"},{input:"favorite animal",target:"I think cats and dogs are nice"},{input:"fruits",target:"apple banana orange grape strawberry"},{input:"what fruits do you know",target:"apple banana orange grape melon"},{input:"favorite fruit",target:"I think apples are popular"},{input:"food",target:"pizza pasta burger salad rice"},{input:"what do you eat",target:"I do not eat but people like pizza"},{input:"favorite food",target:"many people like pizza and pasta"},{input:"count to five",target:"one two three four five"},{input:"numbers",target:"one two three four five six seven"},{input:"how many",target:"I can count many things"},{input:"are you happy",target:"yes I am happy to chat"},{input:"are you sad",target:"no I am doing well"},{input:"do you have feelings",target:"I am an AI but I enjoy talking"},{input:"I am happy",target:"that is wonderful to hear"},{input:"I am sad",target:"I am sorry to hear that"},{input:"what do you like",target:"I like learning and chatting"},{input:"hobbies",target:"reading music sports games art"},{input:"do you like music",target:"music is very nice"},{input:"do you like sports",target:"sports are fun and healthy"},{input:"family",target:"mother father sister brother"},{input:"do you have family",target:"I do not but family is important"},{input:"where do you live",target:"I live in the computer"},{input:"places",target:"home school park city beach mountain"},{input:"favorite place",target:"I think the beach is nice"},{input:"what time is it",target:"I do not know the current time"},{input:"when",target:"I am not sure about the time"},{input:"days of week",target:"monday tuesday wednesday thursday friday saturday sunday"},{input:"yes",target:"okay great"},{input:"no",target:"I understand"},{input:"maybe",target:"that is possible"},{input:"I agree",target:"good we are on the same page"},{input:"I disagree",target:"that is okay we can differ"},{input:"help me",target:"how can I help you"},{input:"I need help",target:"what do you need help with"},{input:"can you help",target:"yes I will try to help"},{input:"teach me",target:"what would you like to learn"},{input:"I want to learn",target:"learning is wonderful"},{input:"tell me about",target:"what topic interests you"}]}},e={};function a(i){var n=e[i];if(void 0!==n)return n.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,a),r.exports}(()=>{const t=a(219),e=a(766);let i,n=!1,r=!1;function o(){const a=(0,e.createVocab)(e.trainingData);i=new t.SimpleLLM(a,64,3),console.log("Vocabulary:",a),console.log("Vocabulary size:",a.length),console.log("First 20 vocab words:",a.slice(0,20)),console.log("Training data count:",e.trainingData.length);const o=document.getElementById("train-button"),s=document.getElementById("predict-button"),l=document.getElementById("user-input"),h=document.getElementById("output"),d=document.getElementById("status");o.addEventListener("click",async()=>{n||(n=!0,r=!1,o.disabled=!0,s.disabled=!0,l.disabled=!0,d.textContent="Training...",h.innerHTML='<div class="message">Training started...</div>',setTimeout(()=>{try{const t=100;i.train(e.trainingData,t),d.textContent="Training completed!",h.innerHTML+='<div class="message success">Training completed! You can now chat with the AI.</div>',r=!0,s.disabled=!1,l.disabled=!1}catch(t){d.textContent="Training failed",h.innerHTML+=`<div class="message error">Error: ${t}</div>`,console.error(t)}finally{n=!1,o.disabled=!1}},100))}),s.addEventListener("click",()=>{const t=l.value.trim();if(t)if(r)try{const e=i.predict(t,10),a=document.createElement("div");a.className="message user-message",a.textContent=`You: ${t}`,h.appendChild(a);const n=document.createElement("div");n.className="message ai-message",n.textContent=`AI: ${e}`,h.appendChild(n),h.scrollTop=h.scrollHeight,l.value=""}catch(t){const e=document.createElement("div");e.className="message error",e.textContent=`Error: ${t}`,h.appendChild(e),console.error(t)}else alert("Please train the model first");else alert("Please enter some text")}),l.addEventListener("keypress",t=>{"Enter"===t.key&&s.click()}),d.textContent='Ready. Click "Train Model" to start.'}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",o):o()})()})();