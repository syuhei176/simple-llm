(()=>{"use strict";var t={49:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OutputLayer=void 0,e.OutputLayer=class{weights;bias;learningRate=.01;vocabSize;embeddingDim;constructor(t,e){this.embeddingDim=t,this.vocabSize=e;const i=Math.sqrt(2/(t+e));this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*i)),this.bias=Array.from({length:e},()=>0)}forward(t){const e=new Array(this.vocabSize).fill(0);for(let i=0;i<this.vocabSize;i++){let r=this.bias[i];for(let e=0;e<this.embeddingDim;e++)r+=t[e]*this.weights[e][i];e[i]=r}return e}softmax(t){const e=Math.max(...t),i=t.map(t=>Math.exp(t-e)),r=i.reduce((t,e)=>t+e,1e-8);return i.map(t=>t/r)}backward(t,e){const i=new Array(this.embeddingDim).fill(0);for(let r=0;r<this.embeddingDim;r++)for(let n=0;n<this.vocabSize;n++)this.weights[r][n]+=this.learningRate*e[n]*t[r],i[r]+=e[n]*this.weights[r][n];for(let t=0;t<this.vocabSize;t++)this.bias[t]+=this.learningRate*e[t];return i}}},77:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EmbeddingLayer=void 0,e.EmbeddingLayer=class{weights;embeddingDim;learningRate=.01;constructor(t,e){this.embeddingDim=e;const i=Math.sqrt(2/e);this.weights=Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*i))}forward(t){return t<0||t>=this.weights.length?Array(this.embeddingDim).fill(0):[...this.weights[t]]}backward(t,e){if(!(t<0||t>=this.weights.length))for(let i=0;i<this.embeddingDim;i++)this.weights[t][i]+=this.learningRate*e[i]}}},219:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleLLM=void 0;const r=i(405),n=i(363),s=i(77),a=i(49);e.SimpleLLM=class{tokenizer;embedding;transformer;outputLayer;vocabSize;embeddingDim;constructor(t,e=16){this.vocabSize=t.length,this.embeddingDim=e,this.tokenizer=new r.SimpleTokenizer(t),this.embedding=new s.EmbeddingLayer(t.length,e),this.transformer=new n.SimpleTransformer(e),this.outputLayer=new a.OutputLayer(e,t.length)}predict(t,e=10){let i=this.tokenizer.encode(t);for(let t=0;t<e;t++){const t=i.map(t=>this.embedding.forward(t)),e=this.transformer.forward(t),r=e[e.length-1],n=this.outputLayer.forward(r),s=this.outputLayer.softmax(n),a=s.indexOf(Math.max(...s));if(i.push(a),0===a)break}return this.tokenizer.decode(i)}train(t,e=10){for(let i=0;i<e;i++){let r=0;t.forEach(({input:t,target:e})=>{const i=this.tokenizer.encode(t),n=this.tokenizer.encode(e),s=i.map(t=>this.embedding.forward(t)),a=this.transformer.forward(s),o=Math.min(a.length,n.length),l=Array.from({length:a.length},()=>new Array(this.embeddingDim).fill(0));for(let t=0;t<o;t++){const e=this.outputLayer.forward(a[t]),i=this.outputLayer.softmax(e),s=[...i];s[n[t]]-=1,r-=Math.log(i[n[t]]+1e-10);const o=this.outputLayer.backward(a[t],s);for(let e=0;e<this.embeddingDim;e++)l[t][e]=o[e]}const h=this.transformer.backward(l);for(let t=0;t<i.length&&t<h.length;t++)this.embedding.backward(i[t],h[t])});const n=r/t.length;console.log(`Epoch ${i+1}/${e} - Loss: ${n.toFixed(4)}`)}}}},363:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTransformer=void 0,e.SimpleTransformer=class{wq;wk;wv;w1;w2;learningRate=.01;embeddingDim;lastInput=[];lastQ=[];lastK=[];lastV=[];lastAttention=[];lastAttnOutput=[];constructor(t){this.embeddingDim=t;const e=Math.sqrt(2/t);this.wq=this.initWeights(t,t,e),this.wk=this.initWeights(t,t,e),this.wv=this.initWeights(t,t,e),this.w1=this.initWeights(t,t,e),this.w2=this.initWeights(t,t,e)}initWeights(t,e,i){return Array.from({length:t},()=>Array.from({length:e},()=>(2*Math.random()-1)*i))}matmul(t,e){const i=[];for(let r=0;r<t.length;r++){i[r]=[];for(let n=0;n<e[0].length;n++){let s=0;for(let i=0;i<t[0].length;i++)s+=t[r][i]*e[i][n];i[r][n]=s}}return i}vecMatmul(t,e){const i=new Array(e[0].length).fill(0);for(let r=0;r<e[0].length;r++)for(let n=0;n<t.length;n++)i[r]+=t[n]*e[n][r];return i}softmax(t){return t.map(t=>{const e=Math.max(...t),i=t.map(t=>Math.exp(t-e)),r=i.reduce((t,e)=>t+e,1e-8);return i.map(t=>t/r)})}attention(t){const e=t.length,i=Math.sqrt(this.embeddingDim);this.lastQ=t.map(t=>this.vecMatmul(t,this.wq)),this.lastK=t.map(t=>this.vecMatmul(t,this.wk)),this.lastV=t.map(t=>this.vecMatmul(t,this.wv));const r=[];for(let t=0;t<e;t++){r[t]=[];for(let n=0;n<e;n++){let e=0;for(let i=0;i<this.embeddingDim;i++)e+=this.lastQ[t][i]*this.lastK[n][i];r[t][n]=e/i}}this.lastAttention=this.softmax(r);const n=[];for(let t=0;t<e;t++){n[t]=new Array(this.embeddingDim).fill(0);for(let i=0;i<e;i++)for(let e=0;e<this.embeddingDim;e++)n[t][e]+=this.lastAttention[t][i]*this.lastV[i][e]}return n}feedForward(t){return t.map(t=>this.vecMatmul(t,this.w1).map(t=>Math.max(0,t))).map(t=>this.vecMatmul(t,this.w2))}forward(t){this.lastInput=t.map(t=>[...t]),this.lastAttnOutput=this.attention(t);const e=this.lastAttnOutput.map((e,i)=>e.map((e,r)=>e+t[i][r]));return this.feedForward(e).map((t,i)=>t.map((t,r)=>t+e[i][r]))}backward(t){const e=t.length,i=Array.from({length:e},()=>new Array(this.embeddingDim).fill(0));for(let r=0;r<e;r++)for(let e=0;e<this.embeddingDim;e++){const n=t[r][e];for(let t=0;t<this.embeddingDim;t++)this.wq[t][e]+=this.learningRate*n*this.lastInput[r][t]*.1,this.wk[t][e]+=this.learningRate*n*this.lastInput[r][t]*.1,this.wv[t][e]+=this.learningRate*n*this.lastInput[r][t]*.1,i[r][t]+=n*(this.wq[t][e]+this.wk[t][e]+this.wv[t][e])*.33}return i}}},405:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleTokenizer=void 0,e.SimpleTokenizer=class{vocab;vocabMap;constructor(t){this.vocab=t,this.vocabMap=Object.fromEntries(t.map((t,e)=>[t,e]))}encode(t){return t.split(" ").map(t=>this.vocabMap[t]??this.vocabMap["[UNK]"])}decode(t){return t.map(t=>this.vocab[t]??"[UNK]").join(" ")}}}},e={};function i(r){var n=e[r];if(void 0!==n)return n.exports;var s=e[r]={exports:{}};return t[r](s,s.exports,i),s.exports}(()=>{const t=i(219),e=[{input:"hello world",target:"I am AI"},{input:"color",target:"red blue green yellow"},{input:"how are you",target:"thank you and you?"},{input:"hello",target:"how are you"},{input:"animals",target:"cat dog bird fish"}];let r,n=!1,s=!1;function a(){const i=function(t){const e=new Set;return t.forEach(t=>{t.input.split(" ").forEach(t=>e.add(t)),t.target.split(" ").forEach(t=>e.add(t))}),Array.from(e)}(e);r=new t.SimpleLLM(i,16),console.log("Vocabulary:",i),console.log("Vocabulary size:",i.length);const a=document.getElementById("train-button"),o=document.getElementById("predict-button"),l=document.getElementById("user-input"),h=document.getElementById("output"),d=document.getElementById("status");a.addEventListener("click",async()=>{n||(n=!0,s=!1,a.disabled=!0,o.disabled=!0,l.disabled=!0,d.textContent="Training...",h.innerHTML='<div class="message">Training started...</div>',setTimeout(()=>{try{const t=100;r.train(e,t),d.textContent="Training completed!",h.innerHTML+='<div class="message success">Training completed! You can now chat with the AI.</div>',s=!0,o.disabled=!1,l.disabled=!1}catch(t){d.textContent="Training failed",h.innerHTML+=`<div class="message error">Error: ${t}</div>`,console.error(t)}finally{n=!1,a.disabled=!1}},100))}),o.addEventListener("click",()=>{const t=l.value.trim();if(t)if(s)try{const e=r.predict(t,10),i=document.createElement("div");i.className="message user-message",i.textContent=`You: ${t}`,h.appendChild(i);const n=document.createElement("div");n.className="message ai-message",n.textContent=`AI: ${e}`,h.appendChild(n),h.scrollTop=h.scrollHeight,l.value=""}catch(t){const e=document.createElement("div");e.className="message error",e.textContent=`Error: ${t}`,h.appendChild(e),console.error(t)}else alert("Please train the model first");else alert("Please enter some text")}),l.addEventListener("keypress",t=>{"Enter"===t.key&&o.click()}),d.textContent='Ready. Click "Train Model" to start.'}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",a):a()})()})();